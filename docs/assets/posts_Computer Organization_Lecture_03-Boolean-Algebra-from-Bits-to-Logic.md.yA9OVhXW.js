import{_ as r,c as a,j as t,a as o,a5 as l,o as n}from"./chunks/framework.CHhwEXkI.js";const h=JSON.parse('{"title":"Boolean Algebra: From Bits to Logic","description":"","frontmatter":{"title":"Boolean Algebra: From Bits to Logic","date":"2023-11-03T00:00:00.000Z","author":["AllenYGY"],"status":"DONE","tags":["NOTE","CO","Lec3"],"created":"2023-11-03T00:59","updated":"2024-05-31T00:50","publish":true},"headers":[],"relativePath":"posts/Computer Organization/Lecture/03-Boolean-Algebra-from-Bits-to-Logic.md","filePath":"posts/Computer Organization/Lecture/03-Boolean-Algebra-from-Bits-to-Logic.md","lastUpdated":null}'),s={name:"posts/Computer Organization/Lecture/03-Boolean-Algebra-from-Bits-to-Logic.md"},i={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},Q={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.186ex"},xmlns:"http://www.w3.org/2000/svg",width:"13.512ex",height:"1.903ex",role:"img",focusable:"false",viewBox:"0 -759 5972.5 841","aria-hidden":"true"};function m(d,e,u,T,p,c){return n(),a("div",null,[e[6]||(e[6]=t("h1",{id:"boolean-algebra-from-bits-to-logic",tabindex:"-1"},[o("Boolean-Algebra-from-Bits-to-Logic "),t("a",{class:"header-anchor",href:"#boolean-algebra-from-bits-to-logic","aria-label":'Permalink to "Boolean-Algebra-from-Bits-to-Logic"'},"​")],-1)),e[7]||(e[7]=t("ul",null,[t("li",null,"Computers represent information by bit (Binary digit)"),t("li",null,"A bit has two possible values, namely 0 and 1."),t("li",null,"A bit can be used to represent a truth value, true and false."),t("li",null,"Therefore bits operations correspond to the logical operations in Boolean Algebra.")],-1)),e[8]||(e[8]=t("h2",{id:"boolean-functions",tabindex:"-1"},[t("em",null,"Boolean Functions"),o(),t("a",{class:"header-anchor",href:"#boolean-functions","aria-label":'Permalink to "*Boolean Functions*"'},"​")],-1)),t("ul",null,[e[2]||(e[2]=t("li",null,"A function is a relation that uniquely associates members of one set with members of another set",-1)),e[3]||(e[3]=t("li",null,[o("A Boolean function has "),t("ul",null,[t("li",null,"At least one Boolean variable"),t("li",null,"At least one Boolean operator"),t("li",{"0,1":""},"At least one input from the set")])],-1)),e[4]||(e[4]=t("li",{"0,1":""},"It produces an output that is also a member of the set",-1)),t("li",null,[t("mjx-container",i,[(n(),a("svg",Q,e[0]||(e[0]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1026.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2082.6,0)"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(3156.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4157,0)"><path data-c="1D44C" d="M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z" style="stroke-width:3;"></path></g><g data-mml-node="msup" transform="translate(4920,0)"><g data-mml-node="mi"><path data-c="1D44D" d="M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(808,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z" style="stroke-width:3;"></path></g></g></g></g>',1)]))),e[1]||(e[1]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"F"),t("mo",null,"="),t("mi",null,"X"),t("mo",null,"+"),t("mi",null,"Y"),t("msup",null,[t("mi",null,"Z"),t("mo",{"data-mjx-alternate":"1"},"′")])])],-1))])]),e[5]||(e[5]=t("li",null,[o("Precedence "),t("ul",null,[t("li",null,"NOT top priority,"),t("li",null,"followed by AND"),t("li",null,[o("then OR "),t("img",{src:"https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-Boolean-Identities.png",alt:"CO-Boolean-Identities"})])])],-1))]),e[9]||(e[9]=l('<h2 id="canonical-forms" tabindex="-1"><em>Canonical Forms</em> <a class="header-anchor" href="#canonical-forms" aria-label="Permalink to &quot;*Canonical Forms*&quot;">​</a></h2><ul><li>There are two canonical forms <ul><li>Sum-of-products</li><li>Product-of-sums</li></ul></li></ul><h3 id="sum-of-products" tabindex="-1"><em>Sum-of-Products</em> <a class="header-anchor" href="#sum-of-products" aria-label="Permalink to &quot;*Sum-of-Products*&quot;">​</a></h3><ul><li>Also called Disjunctive Normal Form (DNF) <em>析取范式</em></li><li><strong>Look at ONE</strong><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-DNF.png" alt="DNF"></li></ul><h3 id="product-of-sums" tabindex="-1"><em>Product-of-Sums</em> <a class="header-anchor" href="#product-of-sums" aria-label="Permalink to &quot;*Product-of-Sums*&quot;">​</a></h3><ul><li>Also called Conjunctive Normal Form (CNF) <em>合取范式</em></li><li><strong>Look at ZERO</strong><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-CNF.png" alt="CNF"></li></ul>',6))])}const f=r(s,[["render",m]]);export{h as __pageData,f as default};
