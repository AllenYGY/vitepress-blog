import{_ as s,c as a,a5 as n,j as t,a as e,o as i}from"./chunks/framework.CHhwEXkI.js";const D=JSON.parse('{"title":"BDA-Stream Data","description":"","frontmatter":{"date":"2024-12-23T00:00:00.000Z","title":"BDA-Stream Data","status":"DONE","author":["AllenYGY"],"tags":["NOTE","BDA"],"publish":true},"headers":[],"relativePath":"posts/Data Analysis/Big Data Analysis/Lecture/BDA-Stream Data.md","filePath":"posts/Data Analysis/Big Data Analysis/Lecture/BDA-Stream Data.md","lastUpdated":null}'),o={name:"posts/Data Analysis/Big Data Analysis/Lecture/BDA-Stream Data.md"},r={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},d={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.816ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.595ex",height:"2.773ex",role:"img",focusable:"false",viewBox:"0 -864.9 1147.1 1225.5","aria-hidden":"true"},m={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},u={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"0.971ex",height:"1.595ex",role:"img",focusable:"false",viewBox:"0 -694 429 705","aria-hidden":"true"},p={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},Q={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"1.928ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 852 683","aria-hidden":"true"},g={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},h={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"1.928ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 852 683","aria-hidden":"true"},x={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},w={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.009ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 888 683","aria-hidden":"true"};function T(f,l,b,k,v,y){return i(),a("div",null,[l[36]||(l[36]=n('<h1 id="bda-stream-data" tabindex="-1">BDA-Stream Data <a class="header-anchor" href="#bda-stream-data" aria-label="Permalink to &quot;BDA-Stream Data&quot;">​</a></h1><p>Infinite Data</p><ul><li>Filtering data streams</li><li>Queries on stream</li><li>Web advertising</li></ul><h2 id="data-streams" tabindex="-1">Data Streams <a class="header-anchor" href="#data-streams" aria-label="Permalink to &quot;Data Streams&quot;">​</a></h2><p>In many data analytics situations, we do not know the entire data set in advance</p><p>Stream Management is important when the input rate is controlled externally:</p><ul><li>Google queries</li><li>Twitter or Facebook status updates</li></ul><p>We can think of the data as infinite and non-stationary (the distribution changes over time)</p><h3 id="the-stream-model" tabindex="-1">The Stream Model <a class="header-anchor" href="#the-stream-model" aria-label="Permalink to &quot;The Stream Model&quot;">​</a></h3><p>Input elements enter at a rapid rate, at one or more input ports (i.e., streams)</p><ul><li>We call elements of the stream tuples</li></ul><p>The system cannot store the entire stream accessibly</p><p>Q: How do you make critical calculations about the stream using a limited amount of (secondary) memory?</p><h3 id="problems-on-data-streams" tabindex="-1">Problems on Data Streams <a class="header-anchor" href="#problems-on-data-streams" aria-label="Permalink to &quot;Problems on Data Streams&quot;">​</a></h3><p>Types of queries one wants on answer on a data stream: (we’ll do these today)</p><ul><li><p>Sampling data from a stream</p><ul><li>Construct a random sample</li></ul></li><li><p>Queries over sliding windows</p><ul><li>Number of items of type x in the last k elements of the stream</li></ul></li><li><p>Filtering a data stream</p><ul><li>Select elements with property x from the stream</li></ul></li><li><p>Counting distinct elements</p><ul><li>Number of distinct elements in the last k elements of the stream</li></ul></li><li><p>Estimating moments</p><ul><li>Estimate avg./std. dev. of last k elements</li></ul></li><li><p>Finding frequent elements</p></li></ul><h2 id="sampling-from-a-data-stream-sampling-a-fixed-proportion" tabindex="-1">Sampling from a Data Stream: Sampling a fixed proportion <a class="header-anchor" href="#sampling-from-a-data-stream-sampling-a-fixed-proportion" aria-label="Permalink to &quot;Sampling from a Data Stream: Sampling a fixed proportion&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/U0dx67.png" alt="Sampling User"></p><p>Solution: Sample Users</p>',19)),t("ul",null,[t("li",null,[l[2]||(l[2]=e("Pick ")),t("mjx-container",r,[(i(),a("svg",d,l[0]||(l[0]=[n('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(396.8,394) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(220,-345) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)" style="stroke-width:3;"></path></g><rect width="907.1" height="60" x="120" y="220"></rect></g></g></g>',1)]))),l[1]||(l[1]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mfrac",null,[t("mn",null,"1"),t("mn",null,"10")])])],-1))]),l[3]||(l[3]=e(" th of users and take all their searches in the sample"))]),l[4]||(l[4]=t("li",null,"Use a hash function that hashes the user name or user id uniformly into 10 buckets",-1))]),l[37]||(l[37]=t("p",null,[t("strong",null,"通用采样过程")],-1)),l[38]||(l[38]=t("p",null,"为了从数据流中采样 a/ba/ba/b 的比例，可以按照以下步骤进行：",-1)),t("ol",null,[t("li",null,[l[10]||(l[10]=t("strong",null,"哈希（Hashing）",-1)),l[11]||(l[11]=e("： ")),t("ul",null,[l[9]||(l[9]=t("li",null,"对每个元组的键应用一个均匀分布的哈希函数。",-1)),t("li",null,[l[7]||(l[7]=e("将键的哈希值映射到 ")),t("mjx-container",m,[(i(),a("svg",u,l[5]||(l[5]=[t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mi"},[t("path",{"data-c":"1D44F",d:"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z",style:{"stroke-width":"3"}})])])],-1)]))),l[6]||(l[6]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"b")])],-1))]),l[8]||(l[8]=e(" 个桶中。"))])])]),l[12]||(l[12]=t("li",null,[t("strong",null,"采样条件"),e("： "),t("ul",null,[t("li",null,[t("strong",null,"如果哈希值小于或等于 aaa"),e("，则选取该元组。")])])],-1))]),l[39]||(l[39]=n('<h2 id="sampling-from-a-data-stream-sampling-a-fixed-size-sample" tabindex="-1">Sampling from a Data Stream: Sampling a fixed-size sample <a class="header-anchor" href="#sampling-from-a-data-stream-sampling-a-fixed-size-sample" aria-label="Permalink to &quot;Sampling from a Data Stream: Sampling a fixed-size sample&quot;">​</a></h2><p>在内存受限的情况下，从数据流中维护一个固定大小 sss 的随机采样集合 SSS。</p><h2 id="queries-over-a-long-sliding-window" tabindex="-1">Queries over a (long) Sliding Window <a class="header-anchor" href="#queries-over-a-long-sliding-window" aria-label="Permalink to &quot;Queries over a (long) Sliding Window&quot;">​</a></h2><h3 id="滑动窗口模型-sliding-windows" tabindex="-1"><strong>滑动窗口模型（Sliding Windows）</strong> <a class="header-anchor" href="#滑动窗口模型-sliding-windows" aria-label="Permalink to &quot;**滑动窗口模型（Sliding Windows）**&quot;">​</a></h3><h4 id="_1-背景" tabindex="-1"><strong>1. 背景</strong> <a class="header-anchor" href="#_1-背景" aria-label="Permalink to &quot;**1. 背景**&quot;">​</a></h4><ul><li>滑动窗口是一种常见的数据流处理模型。</li><li><strong>核心思想</strong>：在数据流中，查询只关注最近接收到的 NN 个元素，这些元素组成了一个<strong>窗口（window）</strong>。</li></ul><h4 id="_2-特殊情况" tabindex="-1"><strong>2. 特殊情况</strong> <a class="header-anchor" href="#_2-特殊情况" aria-label="Permalink to &quot;**2. 特殊情况**&quot;">​</a></h4><ul><li><strong>窗口长度 NN 很大</strong>： <ul><li>数据量可能大到无法完全存储在内存中，甚至无法存储在磁盘中。</li><li>或者有大量的独立数据流，每个流的窗口都无法完全存储。</li></ul></li></ul><h4 id="_3-示例应用" tabindex="-1"><strong>3. 示例应用</strong> <a class="header-anchor" href="#_3-示例应用" aria-label="Permalink to &quot;**3. 示例应用**&quot;">​</a></h4>',9)),t("ul",null,[t("li",null,[l[26]||(l[26]=t("strong",null,"电商场景（如 Amazon）",-1)),l[27]||(l[27]=e("： ")),t("ul",null,[t("li",null,[l[18]||(l[18]=t("strong",null,"数据流描述",-1)),l[19]||(l[19]=e("： ")),t("ul",null,[t("li",null,[l[15]||(l[15]=e("对于每个商品 ")),t("mjx-container",p,[(i(),a("svg",Q,l[13]||(l[13]=[t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mi"},[t("path",{"data-c":"1D44B",d:"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z",style:{"stroke-width":"3"}})])])],-1)]))),l[14]||(l[14]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"X")])],-1))]),l[16]||(l[16]=e("，维护一个二进制流： ")),l[17]||(l[17]=t("ul",null,[t("li",null,"如果商品在第 nn 次交易中售出，流中记录为 1。"),t("li",null,"如果未售出，记录为 0。")],-1))])])]),t("li",null,[l[24]||(l[24]=t("strong",null,"查询需求",-1)),l[25]||(l[25]=e("： ")),t("ul",null,[t("li",null,[l[22]||(l[22]=e("回答问题：商品 ")),t("mjx-container",g,[(i(),a("svg",h,l[20]||(l[20]=[t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mi"},[t("path",{"data-c":"1D44B",d:"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z",style:{"stroke-width":"3"}})])])],-1)]))),l[21]||(l[21]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"X")])],-1))]),l[23]||(l[23]=e(" 在最近 kk 次销售中出现了多少次？"))])])])])])]),l[40]||(l[40]=t("h4",{id:"_4-滑动窗口模型的挑战",tabindex:"-1"},[t("strong",null,"4. 滑动窗口模型的挑战"),e(),t("a",{class:"header-anchor",href:"#_4-滑动窗口模型的挑战","aria-label":'Permalink to "**4. 滑动窗口模型的挑战**"'},"​")],-1)),t("ol",null,[t("li",null,[l[32]||(l[32]=t("strong",null,"数据量限制",-1)),l[33]||(l[33]=e("： ")),t("ul",null,[t("li",null,[l[30]||(l[30]=e("随着 ")),t("mjx-container",x,[(i(),a("svg",w,l[28]||(l[28]=[t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mi"},[t("path",{"data-c":"1D441",d:"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z",style:{"stroke-width":"3"}})])])],-1)]))),l[29]||(l[29]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"N")])],-1))]),l[31]||(l[31]=e(" 的增加，存储窗口数据需要大量的内存或磁盘空间。"))])])]),l[34]||(l[34]=t("li",null,[t("strong",null,"实时性"),e("： "),t("ul",null,[t("li",null,"需要快速处理数据流并实时更新窗口数据。")])],-1)),l[35]||(l[35]=t("li",null,[t("strong",null,"多流问题"),e("： "),t("ul",null,[t("li",null,"如果有多个数据流，每个流的窗口都需要独立维护，增加了计算复杂度。")])],-1))]),l[41]||(l[41]=n('<h4 id="_5-优化策略" tabindex="-1"><strong>5. 优化策略</strong> <a class="header-anchor" href="#_5-优化策略" aria-label="Permalink to &quot;**5. 优化策略**&quot;">​</a></h4><ul><li><strong>近似计算</strong>： <ul><li>在窗口数据量过大的情况下，使用近似算法（例如哈希或概率数据结构）来降低存储和计算需求。</li></ul></li><li><strong>分片存储</strong>： <ul><li>只维护窗口的部分关键数据，而不是存储所有数据点。</li></ul></li><li><strong>滑动更新</strong>： <ul><li>随着新数据点的到来，丢弃窗口中最旧的数据点，从而保持窗口的固定大小。</li></ul></li></ul><h4 id="_6-实际应用场景" tabindex="-1"><strong>6. 实际应用场景</strong> <a class="header-anchor" href="#_6-实际应用场景" aria-label="Permalink to &quot;**6. 实际应用场景**&quot;">​</a></h4><ol><li><strong>实时监控</strong>： <ul><li>检测系统日志中最近一段时间的异常行为。</li></ul></li><li><strong>点击流分析</strong>： <ul><li>分析最近 kk 次用户点击行为以优化推荐系统。</li></ul></li><li><strong>金融交易</strong>： <ul><li>监控股票或商品价格的最近波动趋势。</li></ul></li><li><strong>网络流量分析</strong>： <ul><li>在滑动窗口内计算特定 IP 地址的流量量级。</li></ul></li></ol><h2 id="bda-dgim" tabindex="-1">[[BDA-DGIM]] <a class="header-anchor" href="#bda-dgim" aria-label="Permalink to &quot;[[BDA-DGIM]]&quot;">​</a></h2>',5))])}const M=s(o,[["render",T]]);export{D as __pageData,M as default};
