import{_ as t,c as s,a5 as i,o as a}from"./chunks/framework.CHhwEXkI.js";const p=JSON.parse('{"title":"04-Design-Issues","description":"","frontmatter":{"title":"04-Design-Issues","date":"2023-11-03T00:00:00.000Z","status":"DONE","tags":["DataBase","NOTE","Lec4"],"author":["AllenYGY"],"created":"2023-11-04T14:49","updated":"2024-03-21T21:38","publish":true},"headers":[],"relativePath":"posts/Database Management System/RDBMS/04-Design-Issues.md","filePath":"posts/Database Management System/RDBMS/04-Design-Issues.md","lastUpdated":null}'),n={name:"posts/Database Management System/RDBMS/04-Design-Issues.md"};function o(r,e,l,d,u,h){return a(),s("div",null,e[0]||(e[0]=[i('<h1 id="design-issues" tabindex="-1">Design-Issues <a class="header-anchor" href="#design-issues" aria-label="Permalink to &quot;Design-Issues&quot;">​</a></h1><ul><li>Design Techniques</li><li>Attributes vs Entity</li><li>Entity set vs Relationship set</li><li>Weak entity sets</li><li>Redundancies</li></ul><h2 id="design-techniques" tabindex="-1">Design Techniques <a class="header-anchor" href="#design-techniques" aria-label="Permalink to &quot;Design Techniques&quot;">​</a></h2><ol><li>Express all constraints (you can express!).</li><li>Use and do not change terminology and class structure of the application domain.</li><li>Keep it simple. Avoid defining entity types that do not serve any purpose. Don’t use an entity set when an attribute will do. Choose an entity set if it helps expressing constraints; otherwise, use an attribute.</li><li>Avoid redundancy (but derived attributes are okay)!</li><li>Limit the use of weak entity sets.</li></ol><h3 id="there-are-also-some-decisions-that-you-need-to-make-during-the-design" tabindex="-1">There are also some decisions that you need to make during the design <a class="header-anchor" href="#there-are-also-some-decisions-that-you-need-to-make-during-the-design" aria-label="Permalink to &quot;There are also some decisions that you need to make during the design&quot;">​</a></h3><ul><li>Attribute vs Entity</li><li>Entity set vs Relationship set</li><li>Strong entity sets vs Weak entity sets</li><li>Binary relationship vs multi-ary relationship</li></ul><p>Try to eliminate redundancy In most cases, the answer is very subjective. It depends on the real-world problem. Sometimes, the answers can be very different even on the same problem but with different assumptions.</p><h4 id="attribute-vs-entity" tabindex="-1"><em>Attribute vs Entity</em> <a class="header-anchor" href="#attribute-vs-entity" aria-label="Permalink to &quot;*Attribute vs Entity*&quot;">​</a></h4><p>It depends on the real case. Both ER models have advantages and disadvantages.</p><h4 id="entity-set-vs-relationship-set" tabindex="-1">Entity set vs Relationship set <a class="header-anchor" href="#entity-set-vs-relationship-set" aria-label="Permalink to &quot;Entity set vs Relationship set&quot;">​</a></h4>',10)]))}const m=t(n,[["render",o]]);export{p as __pageData,m as default};
