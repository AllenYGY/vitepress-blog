import{_ as a,c as i,a5 as n,o as t}from"./chunks/framework.CHhwEXkI.js";const p=JSON.parse('{"title":"DBMS-review","description":"","frontmatter":{"title":"DBMS-review","author":"AllenYGY","date":"2023-11-03T00:00:00.000Z","status":"DONE","created":"2023-12-27T21:40","updated":"2024-05-31T00:55","publish":true},"headers":[],"relativePath":"posts/Database Management System/RDBMS/DBMS-Review.md","filePath":"posts/Database Management System/RDBMS/DBMS-Review.md","lastUpdated":null}'),l={name:"posts/Database Management System/RDBMS/DBMS-Review.md"};function o(s,e,c,d,r,h){return t(),i("div",null,e[0]||(e[0]=[n('<h1 id="final-review" tabindex="-1">Final Review <a class="header-anchor" href="#final-review" aria-label="Permalink to &quot;Final Review&quot;">​</a></h1><h2 id="find-all-the-candidate-keys" tabindex="-1">Find all the candidate keys <a class="header-anchor" href="#find-all-the-candidate-keys" aria-label="Permalink to &quot;Find all the candidate keys&quot;">​</a></h2><ol><li>分出 <ul><li>L</li><li>R</li><li>LR</li></ul></li><li>依次遍历 <ul><li>L</li><li>L+LR</li></ul></li></ol><h2 id="decompose-the-schema-in-bcnf" tabindex="-1">Decompose the schema in BCNF <a class="header-anchor" href="#decompose-the-schema-in-bcnf" aria-label="Permalink to &quot;Decompose the schema in BCNF&quot;">​</a></h2><h2 id="is-loss-less-join-decompositon" tabindex="-1">Is Loss-less join Decompositon <a class="header-anchor" href="#is-loss-less-join-decompositon" aria-label="Permalink to &quot;Is Loss-less join Decompositon&quot;">​</a></h2><h2 id="is-dependency-preservation" tabindex="-1">Is Dependency Preservation <a class="header-anchor" href="#is-dependency-preservation" aria-label="Permalink to &quot;Is Dependency Preservation&quot;">​</a></h2><h2 id="find-canonical-cover-of-the-functional-dependencies" tabindex="-1">Find canonical cover of the functional dependencies <a class="header-anchor" href="#find-canonical-cover-of-the-functional-dependencies" aria-label="Permalink to &quot;Find canonical cover of the functional dependencies&quot;">​</a></h2><ul><li>函数右部依赖分解为单属性</li><li>消除冗余属性</li><li>消除冗余的函数依赖</li></ul><h2 id="decompose-the-schema-in-3nf" tabindex="-1">Decompose the schema in 3NF <a class="header-anchor" href="#decompose-the-schema-in-3nf" aria-label="Permalink to &quot;Decompose the schema in 3NF&quot;">​</a></h2><ul><li>Fm</li><li>合并左部相同</li><li>每个FD构成新的R</li><li>在构成的R中如果每个R都不存在 R 的候选键，那么把 R 的候选键作为一个模式放入模式集</li></ul>',10)]))}const u=a(l,[["render",o]]);export{p as __pageData,u as default};
