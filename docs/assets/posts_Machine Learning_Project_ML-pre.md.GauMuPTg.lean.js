import{_ as t,c as i,a5 as a,o as n}from"./chunks/framework.CHhwEXkI.js";const p=JSON.parse('{"title":"ML-Pre-Speech","description":"","frontmatter":{"date":"2024-12-11T00:00:00.000Z","title":"ML-Pre-Speech","status":"DONE","author":["AllenYGY"],"tags":["NOTE"],"publish":true},"headers":[],"relativePath":"posts/Machine Learning/Project/ML-pre.md","filePath":"posts/Machine Learning/Project/ML-pre.md","lastUpdated":null}'),s={name:"posts/Machine Learning/Project/ML-pre.md"};function o(r,e,l,h,c,m){return n(),i("div",null,e[0]||(e[0]=[a('<h1 id="pre" tabindex="-1">pre <a class="header-anchor" href="#pre" aria-label="Permalink to &quot;pre&quot;">​</a></h1><h2 id="system-overview" tabindex="-1">System overview <a class="header-anchor" href="#system-overview" aria-label="Permalink to &quot;System overview&quot;">​</a></h2><p>Our system is designed with two main components: illegal text detection and high-quality comment filtering, with each component trained independently.</p><p>The process begins with illegal text detection,  where the input text first undergoes sensitive word matching<br> The text will also analyzed by a FastText model for screening.</p><p>Texts flagged as illegal by both sensitive word detection and FastText are classified as illegal.</p><p>However, if the two methods provide conflicting results, the BERT model makes the final determination. For texts classified as non-illegal, the system proceeds to high-quality comment filtering. These texts are converted into token embeddings using the pre-trained BERT model, producing a matrix representation. This matrix is then processed by a trained Auto-Encoder, which attempts to reconstruct the input. By evaluating the reconstruction error, the system determines whether the text meets the threshold for high-quality comments.</p><p>If the error falls within the acceptable range, the text is considered high quality; otherwise, it is discarded. This comprehensive pipeline ensures robust illegal text detection and effective identification of high-quality content.</p><h2 id="high-quality-comment-classification" tabindex="-1">High Quality comment classification <a class="header-anchor" href="#high-quality-comment-classification" aria-label="Permalink to &quot;High Quality comment classification&quot;">​</a></h2><p>Based on our assumption, a highly liked comment is a high-quality comment, but this does not mean that a low-liked comment is a low-quality comment.</p><ul><li>For example, some comments may have fewer likes simply because the comment has not been seen enough.</li></ul><p>At the same time, we believe that it is not realistic and objective to manually screen comments with only a small number of people, after all, highly praised comments have been tested by a large number of people.</p>',11)]))}const u=t(s,[["render",o]]);export{p as __pageData,u as default};
