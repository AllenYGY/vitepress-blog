import{_ as o,c as e,a5 as a,j as l,o as t}from"./chunks/framework.CHhwEXkI.js";const x=JSON.parse('{"title":"NoSQL","description":"","frontmatter":{"date":"2024-07-01T00:00:00.000Z","title":"NoSQL","status":"TOBECONTINUED","author":["AllenYGY"],"tags":["NOTE"],"publish":true},"headers":[],"relativePath":"posts/Database Management System/NoSQL/NoSQL.md","filePath":"posts/Database Management System/NoSQL/NoSQL.md","lastUpdated":null}'),Q={name:"posts/Database Management System/NoSQL/NoSQL.md"},r={tabindex:"0",class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},s={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.186ex"},xmlns:"http://www.w3.org/2000/svg",width:"11.88ex",height:"1.731ex",role:"img",focusable:"false",viewBox:"0 -683 5251 765","aria-hidden":"true"},n={tabindex:"0",class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},d={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-1.552ex"},xmlns:"http://www.w3.org/2000/svg",width:"8.393ex",height:"4.627ex",role:"img",focusable:"false",viewBox:"0 -1359 3709.6 2045","aria-hidden":"true"};function u(h,i,c,T,p,m){return t(),e("div",null,[i[4]||(i[4]=a('<p>#DataBase #NoSQL</p><h1 id="nosql" tabindex="-1">NoSQL <a class="header-anchor" href="#nosql" aria-label="Permalink to &quot;NoSQL&quot;">​</a></h1><blockquote><p>[!question]+ What is NoSQL</p><ul><li><strong>Not Only SQL</strong></li><li><strong>NoSQL 是一个总称</strong> 不遵循 RDBMS 原则的数据库和数据存储 <ul><li>一类产品</li><li>有关数据存储和操作的多个（相关）概念的集合</li><li>通常与大型数据集有关</li></ul></li></ul></blockquote><blockquote><p>[!question]+ 为什么不用RDBMS 在互联网背景下</p><ul><li>RDBMS 假定数据是 <ul><li>密集</li><li>基本一致（结构化数据）</li></ul></li><li>来自互联网的数据是 <ul><li>大量且稀疏</li><li>半结构化或非结构化</li></ul></li><li>面对海量稀疏数据集，典型的存储机制和访问方法变得捉襟见肘 <ul><li>稀疏的非/半结构化数据</li><li>高水平可扩展性</li></ul></li></ul></blockquote><h2 id="nosql数据库类型" tabindex="-1">NoSQL数据库类型 <a class="header-anchor" href="#nosql数据库类型" aria-label="Permalink to &quot;NoSQL数据库类型&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Database/NoSQLType.png" alt="NoSQL "></p><ul><li>图数据库: [[Neo4j]] <ul><li>用于存储数据网络信息，如社交关系。</li></ul></li><li>文档数据库: [[MongoDB]] <ul><li>将每个键与称为文档的复杂数据结构配对。</li></ul></li><li>键值数据库: [[Redis]] <ul><li>是最简单的 NoSQL 数据库。数据库中的每个项目都以属性名称（或 &quot;键&quot;）的形式与其值一起存储。</li></ul></li><li>列族数据库：[[Cassandra]] <ul><li>针对大型数据集的查询进行了优化，将数据列（而不是行）存储在一起</li></ul></li></ul><h3 id="图数据库" tabindex="-1">图数据库 <a class="header-anchor" href="#图数据库" aria-label="Permalink to &quot;图数据库&quot;">​</a></h3><ul><li>面向图形</li><li>一切都以边、节点或属性的形式存储</li><li>每个节点和边可以有任意数量的属性</li><li>节点和边都可以贴标签</li><li>标签可用于缩小搜索范围</li><li>适用场景: 网络型 <ul><li>社交网络</li><li>金融领域</li><li>交通网络</li><li>计算机通信网络</li><li>智能电网</li><li>...</li></ul></li></ul><h3 id="文档数据库" tabindex="-1">文档数据库 <a class="header-anchor" href="#文档数据库" aria-label="Permalink to &quot;文档数据库&quot;">​</a></h3><ul><li>核心概念是 &quot;文档 &quot;的概念，它与 RDBMS 中的行相对应</li><li>以某些标准格式或编码封装和编码数据，如 JSON（BSON）</li><li>文档在数据库中通过代表该文档的唯一密钥进行处理</li><li>将文档作为一个整体处理，避免将文档拆分为其组成的名称/值对</li><li>数据库提供 API 或查询语言，可根据文档内容检索文档</li><li>文档是无模式的，也就是说，不同的文档可以有不同的结构和模式(RDBMS 要求每一行都包含相同的列）</li><li>适用场景：评论型 <ul><li>内容管理系统</li><li>电子商务平台</li><li>社交网络</li><li>日志管理系统</li><li>...</li></ul></li></ul><h3 id="键值数据库" tabindex="-1">键值数据库 <a class="header-anchor" href="#键值数据库" aria-label="Permalink to &quot;键值数据库&quot;">​</a></h3><ul><li>以无模式方式存储数据</li><li>以映射方式存储数据 <ul><li>哈希映射或关联数组</li><li>为访问数据提供非常高效的平均运行时间算法</li></ul></li><li>特点 <ul><li>简洁：数据主要采用Key-Value(KV)形式储存</li><li>高速：数据驻留内存，重启时可再次加载进行使用</li><li>易扩展：根据系统负载量，灵活添加或删除服务器</li><li>对键可设置失效时间</li></ul></li><li>适用场景 <ul><li>缓存</li><li>用户会话管理</li><li>分布式锁</li><li>分布式配置管理</li><li>分布式存储系统</li></ul></li></ul><h3 id="列族数据库" tabindex="-1">列族数据库 <a class="header-anchor" href="#列族数据库" aria-label="Permalink to &quot;列族数据库&quot;">​</a></h3><ul><li><p>以列为导向的方式存储数据</p><ul><li>有效存储数据</li><li>避免消耗空间来存储空值</li><li>以列族对列进行分组</li><li>数据不存储为单一表格，而是按列族存储</li><li>数据单位是一组键/值对 <ul><li>用 &quot;行键 &quot;标识</li><li>根据行键排序与筛选</li></ul></li></ul></li><li><p>特点</p><ul><li>更好的可扩展性</li><li>高可用性</li><li>适合离线批量数据处理</li><li>支持跨平台部署</li></ul></li><li><p>适用场景</p><ul><li>数据仓库</li><li>数据挖掘和商业智能</li><li>实时数据分析</li><li>大规模数据集成</li></ul></li></ul><h2 id="处理大数据和可扩展性" tabindex="-1">处理大数据和可扩展性 <a class="header-anchor" href="#处理大数据和可扩展性" aria-label="Permalink to &quot;处理大数据和可扩展性&quot;">​</a></h2><p>NoSQL 解决方案设计用于在集群或多节点数据库解决方案上运行</p><ul><li>如果数据量/操作量较大，则需要在集群中添加更多机器，即 &quot;向外扩展 &quot;或 &quot;水平扩展&quot;。</li><li>不同的方法包括 <ul><li>主从（Master-slave）</li><li>分片（Sharding）</li></ul></li></ul><h2 id="cap-定理" tabindex="-1">CAP 定理 <a class="header-anchor" href="#cap-定理" aria-label="Permalink to &quot;CAP 定理&quot;">​</a></h2><p>分布式存储系统必然存在如下三方面问题</p><ul><li>一致性（Consistency） <ul><li>每个客户端都有相同的数据视图</li></ul></li><li>可用性（Availability） <ul><li>每个客户端始终可以读写</li></ul></li><li>分区容错性（Partition Tolerance）或稳定性 <ul><li>系统在分布式物理网络中运行良好</li></ul></li></ul><h3 id="cap-定理-最多可以处理三个属性中的两个属性" tabindex="-1">CAP 定理 - 最多可以处理三个属性中的两个属性 <a class="header-anchor" href="#cap-定理-最多可以处理三个属性中的两个属性" aria-label="Permalink to &quot;CAP 定理 - 最多可以处理三个属性中的两个属性&quot;">​</a></h3><ol><li>满足CA原则：系统几乎没有或根本没有分区容错性。一致性和可用性优先 <ul><li>RDBS</li></ul></li><li>满足AP原则：一致性受到影响，但系统始终可用，并且在部分分区时也能工作 <ul><li>CouchBD, Cassandra, DynamoDB, Riak</li></ul></li><li>满足CP原则：可用性受到影响，但一致性和分区容错性优于可用性 <ul><li>MongoDB, HBase, Redis</li></ul></li></ol><p>没有完美的 NoSQL 数据库</p><ul><li>每个数据库都有其优缺点</li><li>取决于要完成的任务类型（和偏好） <ul><li>NoSQL 是一套处理以下问题的概念、想法、技术和软件</li></ul></li><li>大数据</li><li>稀疏的非/半结构化数据 <ul><li>高水平可扩展性</li><li>大规模并行处理</li></ul></li><li>不同的应用、目标、对象和方法需要不同的 NoSQL 解决方案</li></ul><h2 id="acid事务" tabindex="-1">ACID事务 <a class="header-anchor" href="#acid事务" aria-label="Permalink to &quot;ACID事务&quot;">​</a></h2><ol><li>原子性 <code>Atomicity</code></li><li>一致性<code>Consistency</code></li><li>隔离性<code>Isolation</code></li><li>持久性<code>Durability</code></li></ol><ul><li>NoSQL <ul><li>不重视 ACID 特性，在某些情况下完全忽略</li></ul></li><li>在分布式并行系统，很难/不可能确保 ACID 属性</li></ul><h2 id="base事务" tabindex="-1">BASE事务 <a class="header-anchor" href="#base事务" aria-label="Permalink to &quot;BASE事务&quot;">​</a></h2><ol><li>基本可用性 <code>Basically Available</code></li><li>软状态 <code>Soft State</code></li><li>最终一致 <code>Eventually Consistent</code></li></ol><ul><li>特点 <ul><li>弱一致性可用性优先</li><li>尽最大努力</li><li>近似答案</li><li>进取（乐观）</li><li>更简单、更快速</li></ul></li></ul><h2 id="一致性问题" tabindex="-1">一致性问题 <a class="header-anchor" href="#一致性问题" aria-label="Permalink to &quot;一致性问题&quot;">​</a></h2><ul><li><p>NoSQL分布式集群系统由多个节点构成</p></li><li><p>由于网络异常、服务器故障等原因，节点并不总能保证正常工作</p></li><li><p>分布式系统采用多数据副本来保证可用性</p></li><li><p>严格一致性</p></li><li><p>“读己之所写”一致性</p></li><li><p>会话一致性</p></li><li><p>单调读一致性</p></li><li><p>最终一致性</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DataBase/NoSQL/Consistency.png" alt="Consistency"></p><h3 id="quorum的nwr策略" tabindex="-1">Quorum的NWR策略 <a class="header-anchor" href="#quorum的nwr策略" aria-label="Permalink to &quot;Quorum的NWR策略&quot;">​</a></h3><ul><li>N: 副本数</li><li>R: 写入副本数</li><li>W: 写入副本数</li></ul>',36)),l("mjx-container",r,[(t(),e("svg",s,i[0]||(i[0]=[a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(981.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1981.4,0)"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(3307.2,0)"><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4363,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g></g></g>',1)]))),i[1]||(i[1]=l("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[l("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[l("mi",null,"R"),l("mo",null,"+"),l("mi",null,"W"),l("mo",null,">"),l("mi",null,"N")])],-1))]),l("mjx-container",n,[(t(),e("svg",d,i[2]||(i[2]=[a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1325.8,0)"><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z" style="stroke-width:3;"></path></g><g data-mml-node="mfrac" transform="translate(2381.6,0)"><g data-mml-node="mi" transform="translate(220,676)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(414,-686)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g><rect width="1088" height="60" x="120" y="220"></rect></g></g></g>',1)]))),i[3]||(i[3]=l("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[l("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[l("mi",null,"W"),l("mo",null,">"),l("mfrac",null,[l("mi",null,"N"),l("mn",null,"2")])])],-1))]),i[5]||(i[5]=a('<h3 id="paxos-algorithm" tabindex="-1">Paxos Algorithm <a class="header-anchor" href="#paxos-algorithm" aria-label="Permalink to &quot;Paxos Algorithm&quot;">​</a></h3><ol><li>提议者 <code>Proposer</code></li><li>决策者 <code>Acceptor</code></li><li>学习者 <code>Learner</code></li></ol><ul><li>Request</li><li>Prepare</li><li>Accept</li><li>Response</li></ul><h3 id="raft-algorithm" tabindex="-1">Raft Algorithm <a class="header-anchor" href="#raft-algorithm" aria-label="Permalink to &quot;Raft Algorithm&quot;">​</a></h3><ol><li>领导者<code>Leader</code>: 1 个，接受服务端的请求</li><li>候选者<code>Candidate</code>: 多个，选举领导者</li><li>追随者<code>Follower</code>: 多个，负责响应来自领导者或者候选者的请求</li></ol><ul><li>每个任期至多存在一个领导者</li><li>默写任期又要选举失败，不存在 Leader</li><li>每个服务器本地维护当前任期</li></ul><h4 id="子问题" tabindex="-1">子问题 <a class="header-anchor" href="#子问题" aria-label="Permalink to &quot;子问题&quot;">​</a></h4><ol><li>领导者选举 <code>Leader Election</code></li><li>日志复制 <code>Log Replication</code></li><li>安全性 <code>Safety</code></li></ol><h3 id="向量时钟机制" tabindex="-1">向量时钟机制 <a class="header-anchor" href="#向量时钟机制" aria-label="Permalink to &quot;向量时钟机制&quot;">​</a></h3>',9))])}const L=o(Q,[["render",u]]);export{x as __pageData,L as default};
