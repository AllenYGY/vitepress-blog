import{_ as e,c as i,a5 as t,o as l}from"./chunks/framework.CHhwEXkI.js";const d=JSON.parse('{"title":"07-Null-Subquery","description":"","frontmatter":{"title":"07-Null-Subquery","date":"2023-12-27T00:00:00.000Z","status":"DONE","tags":["MySQL","NOTE","Lec7"],"author":["AllenYGY"],"created":"2023-12-27T01:37","updated":"2024-03-21T21:49","publish":true},"headers":[],"relativePath":"posts/Database Management System/MySQL/07-Null-Subquery.md","filePath":"posts/Database Management System/MySQL/07-Null-Subquery.md","lastUpdated":null}'),n={name:"posts/Database Management System/MySQL/07-Null-Subquery.md"};function s(u,a,r,o,c,h){return l(),i("div",null,a[0]||(a[0]=[t('<h1 id="null-subquery" tabindex="-1">Null-Subquery <a class="header-anchor" href="#null-subquery" aria-label="Permalink to &quot;Null-Subquery&quot;">​</a></h1><h2 id="null" tabindex="-1">NULL <a class="header-anchor" href="#null" aria-label="Permalink to &quot;NULL&quot;">​</a></h2><ul><li>The domain of each data type contains a special value – NULL. <ul><li>NULL means the value is unknown or does not exist.</li><li>NULL values can participate calculations in the arithmetic expressions</li><li>aggregation functions, comparisons, and predicates (logical test) in the WHERE clause.</li></ul></li></ul><h3 id="arithmetic-and-atomic-predicate" tabindex="-1">Arithmetic and Atomic Predicate <a class="header-anchor" href="#arithmetic-and-atomic-predicate" aria-label="Permalink to &quot;Arithmetic and Atomic Predicate&quot;">​</a></h3><ul><li>To check whether a value of an attribute is NULL (atomic predicate)</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> attribute </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">IS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NULL</span></span></code></pre></div><ul><li>Any arithmetic expression which has NULL values is evaluated as NULL. For example, this query is same as the above. SELECT * FROM staff WHERE (picture+1) IS NULL</li></ul><h3 id="aggregation" tabindex="-1">Aggregation <a class="header-anchor" href="#aggregation" aria-label="Permalink to &quot;Aggregation&quot;">​</a></h3><p>Different aggregation functions treat NULL values differently.</p><ul><li><p>If NULL values and non-NULL values are mixed,</p><ul><li>all aggregation functions ignore NULL values.</li></ul></li><li><p>If the group only consists of NULL values,</p><ul><li>count returns 0;</li><li>other aggregation functions return NULL.</li></ul></li><li><p>如果NULL与非NULL的属性混合 那么所有aggregation function会忽略 NULL</p></li><li><p>如果只有NULL，那么count() return 0,其他aggragation function return NULL</p></li></ul><h3 id="comparison-and-compound-predicates" tabindex="-1">Comparison and Compound Predicates <a class="header-anchor" href="#comparison-and-compound-predicates" aria-label="Permalink to &quot;Comparison and Compound Predicates&quot;">​</a></h3><ul><li>The logic with NULL values has three constants: <ul><li>TRUE, FALSE, and UNKNOWN <em>三值判断体系</em></li></ul></li><li>A comparison with NULL values is evaluated as UNKNOWN. To check whether a logical constant is UNKNOWN, use IS UNKNOWN. For example, try the query and check the outcome.</li></ul><p>SELECT staff_id FROM staff WHERE (staff_rating&gt;5) IS UNKNOWN</p><ul><li><p>如果某个 attribute = NULL 那么他的逻辑判断结果 为 UNKNOWN</p></li><li><p>OR:</p><ul><li>(unknown OR true) = true</li><li>(unknown OR false) = unknown</li><li>(unknown OR unknown) = unknown</li></ul></li><li><p>AND:</p><ul><li>(true AND unknown) = unknown</li><li>(false AND unknown) = false</li><li>(unknown AND unknown) = unknown</li></ul></li><li><p>NOT:</p><ul><li>(NOT unknown) = unknown</li></ul></li></ul><h2 id="subquery" tabindex="-1">Subquery <a class="header-anchor" href="#subquery" aria-label="Permalink to &quot;Subquery&quot;">​</a></h2><ul><li>A subquery is a query (SELECT…FROM…WHERE) inside another query.</li></ul><p>Subqueries can be in all of SELECT, FROM, and WHERE clauses.</p><p>In the FROM clause, users need to indicate some tables. A “SELECT…FROM…WHERE…” query returns a temporary table. (The type is matched.)</p>',18)]))}const N=e(n,[["render",s]]);export{d as __pageData,N as default};
