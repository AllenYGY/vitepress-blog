import{_ as i,c as a,a5 as e,o as t}from"./chunks/framework.CHhwEXkI.js";const d=JSON.parse('{"title":"04-Aggregation","description":"","frontmatter":{"title":"04-Aggregation","date":"2023-11-17T00:00:00.000Z","status":"DONE","tags":["MySQL","NOTE","Lec4"],"author":["AllenYGY"],"created":"2023-11-18T12:09","updated":"2024-03-21T21:46","publish":true},"headers":[],"relativePath":"posts/Database Management System/MySQL/04-Aggregation.md","filePath":"posts/Database Management System/MySQL/04-Aggregation.md","lastUpdated":null}'),n={name:"posts/Database Management System/MySQL/04-Aggregation.md"};function l(h,s,p,k,r,g){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="aggregation" tabindex="-1">Aggregation <a class="header-anchor" href="#aggregation" aria-label="Permalink to &quot;Aggregation&quot;">​</a></h1><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> column_name(s), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">COUNT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GROUP BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> column_name(s)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HAVING</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> condition;</span></span></code></pre></div><ul><li>“Aggregation” means performing some operations on a group of objects.</li></ul><p>COUNT: count the value MAX: find the maximum value MIN: find the minimum value AVG: calculate the average value SUM: sum up the values</p><h2 id="count" tabindex="-1">COUNT <a class="header-anchor" href="#count" aria-label="Permalink to &quot;COUNT&quot;">​</a></h2><ul><li>Suppose that we want to count the number of different languages.</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> COUNT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> language</span></span></code></pre></div><ul><li>In this example, all tuples in the table “language” is considered as a group. The query counts the number of distinct objects in the group. After applying an aggregation function, the result of COUNT(*) is treated as an attribute.</li></ul><h2 id="group-by" tabindex="-1">GROUP BY <a class="header-anchor" href="#group-by" aria-label="Permalink to &quot;GROUP BY&quot;">​</a></h2><ul><li>For example, find the number of films for each language. The resulting table has two columns, one for languages, one for the number of films.</li></ul><p>Only those films of the same language are in the same group (different language different group). Then, count the number within each group.</p><ul><li>To achieve the grouping, we use GROUP BY.</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> language_id, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(film_id) </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> film </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">JOIN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> language</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> USING</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(language_id) </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GROUP BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (language_id)</span></span></code></pre></div><ul><li>To indicate the result of aggregation of each group, group by attributes are usually selected.</li></ul><h2 id="having" tabindex="-1">HAVING <a class="header-anchor" href="#having" aria-label="Permalink to &quot;HAVING&quot;">​</a></h2><ul><li><p>Sometimes we need condition checking before and after aggregation functions</p></li><li><p>For example, show the actors’ names and the number of Sci-Fi movies played by him/her if the number of Sci-Fi movies is more than 3</p></li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> actor_id,first_name,last_name,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">COUNT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(film_id)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> actor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">JOIN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> film_actor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">USING</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (actor_id) </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    JOIN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> film </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">USING</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(film_id) </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    JOIN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> film_category </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">USING</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(film_id)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    JOIN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> category </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">USING</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(category_id)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> category</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sci-fi&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GROUP BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> actor_id</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HAVING</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> COUNT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(film_id)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><ul><li>The query is executed in this sequence.</li></ul><ol><li>Combine the tables in FROM clause</li><li>Check the condition in WHERE clause</li><li>Group tuples</li><li>Aggregation function</li><li>Check the condition in HAVING clause</li><li>Output the selected attributes</li></ol><h2 id="distinct" tabindex="-1">DISTINCT <a class="header-anchor" href="#distinct" aria-label="Permalink to &quot;DISTINCT&quot;">​</a></h2><p>Assuming that every country has a city. Why the following query cannot find the number of countries?</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> COUNT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(country_id)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> city</span></span></code></pre></div><p>We only assume that every country has a city. But, a country may have multiple cites. Those countries will be over counted. We can use DISTINCT to remove duplications.</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> COUNT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DISTINCT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> country_id)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> city</span></span></code></pre></div>`,24)]))}const c=i(n,[["render",l]]);export{d as __pageData,c as default};
