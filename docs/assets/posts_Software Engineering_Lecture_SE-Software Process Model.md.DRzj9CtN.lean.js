import{_ as i,c as l,a5 as a,o as t}from"./chunks/framework.CHhwEXkI.js";const h=JSON.parse('{"title":"SE-Software Process Model","description":"","frontmatter":{"date":"2025-02-22T00:00:00.000Z","title":"SE-Software Process Model","status":"DONE","author":["AllenYGY"],"tags":["NOTE","Software-Engineering","ProcessModel","Review"],"publish":true},"headers":[],"relativePath":"posts/Software Engineering/Lecture/SE-Software Process Model.md","filePath":"posts/Software Engineering/Lecture/SE-Software Process Model.md","lastUpdated":null}'),o={name:"posts/Software Engineering/Lecture/SE-Software Process Model.md"};function s(r,e,n,p,d,c){return t(),l("div",null,e[0]||(e[0]=[a('<h1 id="se-software-process-model" tabindex="-1">SE-Software Process Model <a class="header-anchor" href="#se-software-process-model" aria-label="Permalink to &quot;SE-Software Process Model&quot;">​</a></h1><h2 id="what-is-a-software-process-model" tabindex="-1">What is a software process model? <a class="header-anchor" href="#what-is-a-software-process-model" aria-label="Permalink to &quot;What is a software process model?&quot;">​</a></h2><ul><li>A software process <ul><li>is a set of activities whose goal is the development or evolution (演变) of software</li></ul></li><li>Software process model <ul><li>a simplified representation of a software process from a specific perspective.</li></ul></li></ul><h2 id="what-process-models-have-we-learnt-in-this-semester" tabindex="-1">What process models have we learnt in this semester? <a class="header-anchor" href="#what-process-models-have-we-learnt-in-this-semester" aria-label="Permalink to &quot;What process models have we learnt in this semester?&quot;">​</a></h2><h3 id="waterfall-model" tabindex="-1">Waterfall model <a class="header-anchor" href="#waterfall-model" aria-label="Permalink to &quot;Waterfall model&quot;">​</a></h3><p><img src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/hbStB7.png" alt="hbStB7"></p><ul><li><p>A process that flows in one - direction, involving <em>analysis</em>, <em>design</em>, <em>coding</em>, <em>testing</em>, and <em>maintenance</em> in sequence.</p></li><li><p>Advantage:</p><ul><li>Straightforward and Disciplined</li></ul></li><li><p>Disadvantage:</p><ul><li>Users cannot describe their requirements very clearly at the beginning</li><li>Hard to follow</li><li>The projects developed with this process are often delayed</li></ul></li></ul><h3 id="incremental-process-model" tabindex="-1">Incremental process model <a class="header-anchor" href="#incremental-process-model" aria-label="Permalink to &quot;Incremental process model&quot;">​</a></h3><p><img src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/xTgFGI.png" alt="xTgFGI"></p><ul><li><p>Allows doing <em>the most important features first</em> and adding the rest later, with a loop in the process for adding more requirements.</p></li><li><p>Clients do NOT need to specify the requirements for the whole system at the beginning</p></li><li><p>Clients can specify the most important parts to finish first</p></li><li><p>It requires more testing each time a new increment is added compared to the waterfall model.</p></li><li><p>Advantage:</p><ul><li>The risk that the whole system fails is lower (compared to the waterfall model)</li><li>Shorten the delivery time</li></ul></li><li><p>Disadvantage:</p><ul><li>The system structure is loose</li><li>Hard to define the increments</li></ul></li></ul><h3 id="prototyping-model" tabindex="-1">Prototyping model <a class="header-anchor" href="#prototyping-model" aria-label="Permalink to &quot;Prototyping model&quot;">​</a></h3><p><img src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/80h26f.png" alt="80h26f"></p><ul><li><p>A quick design -&gt; the construction of a prototype</p></li><li><p>Identify software requirements</p></li><li><p>Paper work Prototype: A <em>non-computerized</em> form of prototype, likely involving physical or hand-drawn representations to give an initial idea of the system.</p></li><li><p>Computer programs Prototype: A prototype in the form of a <em>computer program</em>, which can be evolved into the final system.</p><ul><li>This allows developers to have a quick design and for users to get an initial look at the system.</li></ul></li><li><p>Advantages:</p><ul><li>Users can have an initial look of the system</li><li>Developers have a quick design</li><li>The prototype can be evolved to a system</li></ul></li><li><p>Disadvantages:</p><ul><li>Rush to get it work</li><li>Hard to ensure the quality and to maintain</li></ul></li></ul><h3 id="spiral-model" tabindex="-1">Spiral model <a class="header-anchor" href="#spiral-model" aria-label="Permalink to &quot;Spiral model&quot;">​</a></h3><p><img src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/dsYLfE.png" alt="dsYLfE"></p><ul><li><p>proposed by Barry Boehm</p></li><li><p>An evolutionary（演变） (iterative) software process model</p></li><li><p>Combine both waterfall model and prototyping model</p></li><li><p>Many variants are available</p></li><li><p>Advantages:</p><ul><li>Developers can using prototyping in each evolutionary level</li><li>Reduce the risk</li></ul></li><li><p>Disadvantage:</p><ul><li>Continual risk analysis</li><li>Document maintenance</li></ul></li></ul><h3 id="rational-unified-process" tabindex="-1">Rational Unified Process <a class="header-anchor" href="#rational-unified-process" aria-label="Permalink to &quot;Rational Unified Process&quot;">​</a></h3><ul><li><p>A process includes many cycles</p></li><li><p>One cycle includes four phases</p><ul><li>Inception</li><li>Elaboration</li><li>Construction</li><li>Transitions</li></ul></li><li><p>One phase includes several iterations</p><ul><li>Workflows are in one iteration</li></ul></li><li><p>Advantages:</p><ul><li>Combine several process models <ul><li>Support prototyping and incremental delivery</li></ul></li><li>Illustrate good practices in specification and design</li></ul></li><li><p>Disadvantage:</p><ul><li>Not suitable for embedded software development</li></ul></li></ul>',18)]))}const u=i(o,[["render",s]]);export{h as __pageData,u as default};
