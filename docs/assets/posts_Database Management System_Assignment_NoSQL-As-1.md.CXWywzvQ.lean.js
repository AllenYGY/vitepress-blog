import{_ as n,c as l,a5 as a,j as i,a as t,o as e}from"./chunks/framework.CHhwEXkI.js";const J=JSON.parse('{"title":"NoSQL-Assignment","description":"","frontmatter":{"date":"2024-07-04T00:00:00.000Z","title":"NoSQL-Assignment","status":"DONE","author":["AllenYGY"],"tags":["Assignment","NoSQL"],"publish":true},"headers":[],"relativePath":"posts/Database Management System/Assignment/NoSQL-As-1.md","filePath":"posts/Database Management System/Assignment/NoSQL-As-1.md","lastUpdated":null}'),o={name:"posts/Database Management System/Assignment/NoSQL-As-1.md"},r={id:"_12-哪种说法最恰当地描述了-cypher-中的-optional-match-语句",tabindex:"-1"},h={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},d={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.767ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.719ex",height:"2.362ex",role:"img",focusable:"false",viewBox:"0 -705 760 1044","aria-hidden":"true"},p={id:"_13-选择下面的-cypher-语句-删除-id-为-3563-的节点及其所有可能的连接关系-请选择所有适用的语句。",tabindex:"-1"},m={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},k={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.717ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.414ex",height:"2.337ex",role:"img",focusable:"false",viewBox:"0 -716 1509 1033","aria-hidden":"true"},g={id:"_14-给定一个由标有-人-person-的节点和类型为-知道-knows-的关系连接而成的模型-请选择以下与莎拉的朋友和她朋友的朋友相匹配的语句-请选择所有适用的语句。",tabindex:"-1"},Q={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},u={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.767ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.437ex",height:"2.362ex",role:"img",focusable:"false",viewBox:"0 -705 1519 1044","aria-hidden":"true"},x={id:"_16-当前nosql数据库产品中最热门的一种数据库是",tabindex:"-1"},T={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},y={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-1.181ex"},xmlns:"http://www.w3.org/2000/svg",width:"10.6ex",height:"2.726ex",role:"img",focusable:"false",viewBox:"0 -683 4685 1205","aria-hidden":"true"},E={id:"_17-mongodb-是由-语言编写的",tabindex:"-1"},w={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},c={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.903ex"},xmlns:"http://www.w3.org/2000/svg",width:"6.245ex",height:"2.498ex",role:"img",focusable:"false",viewBox:"0 -705 2760.4 1104","aria-hidden":"true"},f={id:"_18-mongodb-是一个、模式自由的文档型数据库",tabindex:"-1"},C={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},b={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-1.17ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.05ex",height:"2.867ex",role:"img",focusable:"false",viewBox:"0 -750 4000 1267","aria-hidden":"true"},v={id:"_19-mongodb的设计采用-可通过分片将数据分布在集群机器中",tabindex:"-1"},A={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},F={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-1.17ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.05ex",height:"2.867ex",role:"img",focusable:"false",viewBox:"0 -750 4000 1267","aria-hidden":"true"},D={id:"_20-mongodb的逻辑结构是的一种形式",tabindex:"-1"},M={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},B={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-1.17ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.05ex",height:"2.867ex",role:"img",focusable:"false",viewBox:"0 -750 4000 1267","aria-hidden":"true"},L={id:"_21-下列数据库中-哪个数据库不是mongodb默认提供的",tabindex:"-1"},H={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},S={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.717ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.717ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -683 759 1000","aria-hidden":"true"},q={id:"_22-下列说法中-关于mongodb文档说法正确的是",tabindex:"-1"},N={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},P={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.717ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.873ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -683 828 1000","aria-hidden":"true"};function V(R,s,Z,j,O,$){return e(),l("div",null,[s[52]||(s[52]=a(`<p>#NoSQL #Assignment #Neo4j #Mongodb</p><h1 id="nosql-assignment-1" tabindex="-1">NoSQL-Assignment-1 <a class="header-anchor" href="#nosql-assignment-1" aria-label="Permalink to &quot;NoSQL-Assignment-1&quot;">​</a></h1><h2 id="_1-什么是-nosql-数据库" tabindex="-1">1. 什么是 NoSQL 数据库 ？ <a class="header-anchor" href="#_1-什么是-nosql-数据库" aria-label="Permalink to &quot;1. 什么是 NoSQL 数据库 ？&quot;">​</a></h2><ul><li>NoSQL数据库是不遵循RDBMS原则的数据库和数据存储，NoSQL意思是不仅仅是 SQL</li></ul><h2 id="_2-nosql数据库有哪些类型-请列举并简要介绍其中几种" tabindex="-1">2. NoSQL数据库有哪些类型？请列举并简要介绍其中几种 <a class="header-anchor" href="#_2-nosql数据库有哪些类型-请列举并简要介绍其中几种" aria-label="Permalink to &quot;2. NoSQL数据库有哪些类型？请列举并简要介绍其中几种&quot;">​</a></h2><ul><li>图数据库: <ul><li>用于存储数据网络信息，如社交关系。</li><li>如：[[Neo4j]]</li></ul></li><li>文档数据库: <ul><li>将每个键与称为文档的复杂数据结构配对。</li><li>如：[[MongoDB]]</li></ul></li><li>键值数据库: <ul><li>是最简单的 NoSQL 数据库。数据库中的每个项目都以属性名称（或 &quot;键&quot;）的形式与其值一起存储。</li><li>如：[[Redis]]</li></ul></li><li>列族数据库： <ul><li>针对大型数据集的查询进行了优化，将数据列（而不是行）存储在一起。</li><li>如：[[Cassandra]]</li></ul></li></ul><h2 id="_3-请解释关系型数据库与-nosql-数据库之间的主要区别" tabindex="-1">3. 请解释关系型数据库与 NoSQL 数据库之间的主要区别 <a class="header-anchor" href="#_3-请解释关系型数据库与-nosql-数据库之间的主要区别" aria-label="Permalink to &quot;3. 请解释关系型数据库与 NoSQL 数据库之间的主要区别&quot;">​</a></h2><ul><li>关系型数据库 <ul><li>中心化的</li><li>处理密集，结构化的数据</li><li>满足 ACID 性</li><li>遵循 CA 原则</li></ul></li><li>NoSQL <ul><li>去中心化的</li><li>处理稀疏数据，半/非结构化的数据</li><li>主要是查询，很少更新</li><li>满足 BASE 性</li><li>遵循 AP 或 CP 原则</li></ul></li></ul><h2 id="_4-请解释-cap-定理-并说明它在-nosql数据库中的重要性" tabindex="-1">4. 请解释 CAP 定理，并说明它在 NoSQL数据库中的重要性 <a class="header-anchor" href="#_4-请解释-cap-定理-并说明它在-nosql数据库中的重要性" aria-label="Permalink to &quot;4. 请解释 CAP 定理，并说明它在 NoSQL数据库中的重要性&quot;">​</a></h2><ul><li>CAP 定理（CAP Theorem） <ul><li>是由计算机科学家 Eric Brewer 提出的一个关于分布式数据存储系统的基本定理。该定理指出，在任何分布式数据存储系统中，无法同时完全满足以下三个特性： <ol><li><strong>一致性（Consistency）</strong>：每个客户端都有相同的数据视图。</li><li><strong>可用性（Availability）</strong>：每个客户端始终可以读写。</li><li><strong>分区容错性（Partition Tolerance）</strong>：系统在分布式物理网络中运行良好</li></ol></li></ul></li><li>CAP 定理在 NoSQL 数据库中的重要性 <ul><li>NoSQL 数据库的设计通常会在 CAP 定理的背景下进行权衡，以满足特定应用场景的需求： <ol><li>满足CA原则：系统几乎没有或根本没有分区容错性。一致性和可用性优先</li><li>满足AP原则：一致性受到影响，但系统始终可用，并且在部分分区时也能工作 <ul><li>Cassandra, DynamoDB</li></ul></li><li>满足CP原则：可用性受到影响，但一致性和分区容错性优于可用性 <ul><li>MongoDB, HBase, Redis</li></ul></li></ol></li></ul></li></ul><h2 id="_5-请解释以下概念" tabindex="-1">5. 请解释以下概念 <a class="header-anchor" href="#_5-请解释以下概念" aria-label="Permalink to &quot;5. 请解释以下概念&quot;">​</a></h2><ul><li>a.高可用性 (High Availability) <ul><li>每个客户端始终可以读写，读写实时更新</li></ul></li><li>b. 可扩展性 (Scalability) <ul><li>存储空间可扩展</li><li>数据易于扩展</li></ul></li><li>c. 分布式系统 (Distributed System) <ul><li>去中心化的系统</li><li>可有数千台机器分布在世界各地</li></ul></li></ul><h2 id="_6-请解释以下-nosql-数据库的特点" tabindex="-1">6. 请解释以下 NoSQL 数据库的特点 <a class="header-anchor" href="#_6-请解释以下-nosql-数据库的特点" aria-label="Permalink to &quot;6. 请解释以下 NoSQL 数据库的特点&quot;">​</a></h2><ul><li>a.键值存储(Key-Value Store) <ul><li>简洁：数据主要采用Key-Value(KV)形式储存</li><li>高速：数据驻留内存，重启时可再次加载进行使用</li><li>易扩展：根据系统负载量，灵活添加或删除服务器</li><li>对键可设置失效时间</li></ul></li><li>b. 列存储 (Column Store) <ul><li>更好的可扩展性</li><li>高可用性</li><li>适合离线批量数据处理</li></ul></li><li>c.文档数据库(Document Store) <ul><li>核心概念是 &quot;文档 &quot;的概念，它与 RDBMS 中的行相对应</li><li>以某些标准格式或编码封装和编码数据，如 JSON（BSON）</li><li>文档在数据库中通过代表该文档的唯一密钥进行处理</li><li>将文档作为一个整体处理，避免将文档拆分为其组成的名称/值对</li><li>文档是无模式的，可以是非结构的数据</li></ul></li><li>d.图形数据库(Graph Store) <ul><li>面向图形</li><li>一切都以边、节点或属性的形式存储</li><li>每个节点和边可以有任意数量的属性</li><li>节点和边都可以贴标签</li><li>标签可用于缩小搜索范围</li></ul></li></ul><h2 id="_7-请解释以下-nosql-数据库的适用场景-具体到哪种数据库-为什么" tabindex="-1">7. 请解释以下 NoSQL 数据库的适用场景， 具体到哪种数据库，为什么 <a class="header-anchor" href="#_7-请解释以下-nosql-数据库的适用场景-具体到哪种数据库-为什么" aria-label="Permalink to &quot;7. 请解释以下 NoSQL 数据库的适用场景， 具体到哪种数据库，为什么&quot;">​</a></h2><ul><li>a. 实时分析： <ul><li>键值数据库<code>Redis</code>, 支持极高的读写速度，适合需要快速响应的实时分析应用。</li></ul></li><li>b. 大数据处理： <ul><li>列族数据库 <code>Cassandra</code>, 能够轻松地横向扩展，处理大数据量和高吞吐量的需求。</li></ul></li><li>c. 社交网络： <ul><li>图数据库 <code>Neo4J</code>，社交网络中的数据天然适合图模型，例如用户、朋友关系、点赞、评论等。Neo4j 通过图形算法和索引，能够高效地进行复杂的关系查询和路径查找，</li></ul></li><li>d. 物联网 <code>loT</code>: <ul><li>文档数据库<code>MongoDB</code>，能够处理结构化、半结构化和非结构化数据。物联网数据通常包括各种类型的传感器数据，这些数据具有高度的灵活性和多样性。MongoDB 提供了高效的存储和查询能力，支持时间序列数据的存储和分析，适合物联网应用中大量多变的数据处理需求。</li></ul></li></ul><h2 id="_8-请描述一个实际应用场景-说明为什么选择使用-nosql-数据库而不是关系型数据库" tabindex="-1">8. 请描述一个实际应用场景，说明为什么选择使用 NoSQL 数据库而不是关系型数据库 <a class="header-anchor" href="#_8-请描述一个实际应用场景-说明为什么选择使用-nosql-数据库而不是关系型数据库" aria-label="Permalink to &quot;8. 请描述一个实际应用场景，说明为什么选择使用 NoSQL 数据库而不是关系型数据库&quot;">​</a></h2><ul><li>实际应用场景：社交媒体评论管理 <ul><li>社交媒体评论具有大量非结构化的数据，且用户在高峰期频繁发布和查看评论，系统需要支持高并发读写操作。</li><li><strong>NoSQL 数据库具有可扩展性</strong>：NoSQL 数据库（如 MongoDB、Cassandra）能够水平扩展，通过增加更多节点来处理大规模数据和高并发请求。</li><li>关系型数据库通常难以应对如此大规模的数据增长和高并发需求。</li></ul></li></ul><h2 id="_9-以下cypher语句是否正确-否" tabindex="-1">9. 以下Cypher语句是否正确？<strong>否</strong> <a class="header-anchor" href="#_9-以下cypher语句是否正确-否" aria-label="Permalink to &quot;9. 以下Cypher语句是否正确？**否**&quot;">​</a></h2><div class="language-cypher vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cypher</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MATCH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (v:Vehicle)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">[:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">OWNED_BY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p:Person)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WITH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> p, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p.name) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> owners</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RETURN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v, owners</span></span></code></pre></div><h2 id="_10-order-by-是否是cypher语句-是" tabindex="-1">10. ORDER BY 是否是Cypher语句？ <strong>是</strong> <a class="header-anchor" href="#_10-order-by-是否是cypher语句-是" aria-label="Permalink to &quot;10. ORDER BY 是否是Cypher语句？ **是**&quot;">​</a></h2><h2 id="_11-为节点添加标签会自动索引名称属性吗-否" tabindex="-1">11. 为节点添加标签会自动索引名称属性吗？<strong>否</strong> <a class="header-anchor" href="#_11-为节点添加标签会自动索引名称属性吗-否" aria-label="Permalink to &quot;11. 为节点添加标签会自动索引名称属性吗？**否**&quot;">​</a></h2>`,22)),i("h2",r,[s[2]||(s[2]=t("12. 哪种说法最恰当地描述了 Cypher 中的 OPTIONAL MATCH 语句？ ")),i("mjx-container",h,[(e(),l("svg",d,s[0]||(s[0]=[a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="munder"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(0,-487)"><svg width="760" height="237" x="0" y="148" viewBox="190 148 760 237"><path data-c="2013" d="M0 248V285H499V248H0Z" transform="scale(2.28,1)" style="stroke-width:3;"></path></svg></g></g></g></g>',1)]))),s[1]||(s[1]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("munder",null,[i("mi",null,"C"),i("mo",{accent:"true"},"―")])])],-1))]),s[3]||(s[3]=t()),s[4]||(s[4]=i("a",{class:"header-anchor",href:"#_12-哪种说法最恰当地描述了-cypher-中的-optional-match-语句","aria-label":'Permalink to "12. 哪种说法最恰当地描述了 Cypher 中的 OPTIONAL MATCH 语句？ $\\underline{C}$"'},"​",-1))]),s[53]||(s[53]=i("ul",null,[i("li",null,"A. OPTIONAL MATCH 不是 Cypher 语句。"),i("li",null,"B. OPTIONAL MATCH 为 Cypher 查询提供参数占位符。它保存参数化查询，然后根据客户提供的值与图进行可选匹配。"),i("li",null,"C. OPTIONAL MATCH 会搜索可能存在也可能不存在的描述模式，并将模式中不存在的标识符赋值为 NULL。"),i("li",null,"D. 可选匹配子句将获取一组属性值，并将其与数据库中的所有节点进行可选匹配。")],-1)),i("h2",p,[s[7]||(s[7]=t("13. 选择下面的 Cypher 语句，删除 id 为 3563 的节点及其所有可能的连接关系？")),s[8]||(s[8]=i("em",null,"请选择所有适用的语句",-1)),s[9]||(s[9]=t("。 ")),i("mjx-container",m,[(e(),l("svg",k,s[5]||(s[5]=[a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="munder"><g data-mml-node="mrow"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(750,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(0,-465)"><svg width="1509" height="237" x="0" y="148" viewBox="377.2 148 1509 237"><path data-c="2013" d="M0 248V285H499V248H0Z" transform="scale(4.527,1)" style="stroke-width:3;"></path></svg></g></g></g></g>',1)]))),s[6]||(s[6]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("munder",null,[i("mrow",null,[i("mi",null,"A"),i("mi",null,"B")]),i("mo",{accent:"true"},"―")])])],-1))]),s[10]||(s[10]=t()),s[11]||(s[11]=i("a",{class:"header-anchor",href:"#_13-选择下面的-cypher-语句-删除-id-为-3563-的节点及其所有可能的连接关系-请选择所有适用的语句。","aria-label":'Permalink to "13. 选择下面的 Cypher 语句，删除 id 为 3563 的节点及其所有可能的连接关系？*请选择所有适用的语句*。 $\\underline{AB}$"'},"​",-1))]),s[54]||(s[54]=i("ul",null,[i("li",null,"A. MATCH (a:Thing {id:3563}) DETACH DELETE a"),i("li",null,"B. MATCH (a:Thing {id:3563}) OPTIONAL MATCH (a)-[r]-() DELETE a, r"),i("li",null,"C. MATCH (a:Thing {id:3563}) DELETE a"),i("li",null,"D. MATCH (a:Thing {id:3563})-[r]-(b) DELETE a, r")],-1)),i("h2",g,[s[14]||(s[14]=t('14. 给定一个由标有 "人"（Person）的节点和类型为 "知道"（KNOWS）的关系连接而成的模型，请选择以下与莎拉的朋友和她朋友的朋友相匹配的语句？请选择所有适用的语句。')),i("mjx-container",Q,[(e(),l("svg",u,s[12]||(s[12]=[a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="munder"><g data-mml-node="mrow"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(759,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(0,-487)"><svg width="1519" height="237" x="0" y="148" viewBox="379.8 148 1519 237"><path data-c="2013" d="M0 248V285H499V248H0Z" transform="scale(4.557,1)" style="stroke-width:3;"></path></svg></g></g></g></g>',1)]))),s[13]||(s[13]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("munder",null,[i("mrow",null,[i("mi",null,"B"),i("mi",null,"C")]),i("mo",{accent:"true"},"―")])])],-1))]),s[15]||(s[15]=t()),s[16]||(s[16]=i("a",{class:"header-anchor",href:"#_14-给定一个由标有-人-person-的节点和类型为-知道-knows-的关系连接而成的模型-请选择以下与莎拉的朋友和她朋友的朋友相匹配的语句-请选择所有适用的语句。","aria-label":'Permalink to "14. 给定一个由标有 "人"（Person）的节点和类型为 "知道"（KNOWS）的关系连接而成的模型，请选择以下与莎拉的朋友和她朋友的朋友相匹配的语句？请选择所有适用的语句。$\\underline{BC}$"'},"​",-1))]),s[55]||(s[55]=a(`<ul><li>A. MATCH (sarah:Person)-[:KNOWS]-&gt;(friend:Person) WHERE sarah.name = &quot;Sarah&quot; RETURN friend</li><li>B. MATCH (sarah:Person)-[:KNOWS*1...2]-&gt;(friend:Person) WHERE sarah.name = &quot;Sarah&quot; RETURN friend</li><li>C. MATCH (sarah:Person)-[:KNOWS]-&gt;(friend:Person) OPTIONAL MATCH (friend)-[:KNOWS]-&gt;(fof:Person) WHERE sarah.name = &quot;Sarah&quot; RETURN friend, fof</li><li>D. 所有这些都是正确的。</li></ul><h2 id="_15-使用neo4j中的cypher语言创建一个热门电影-电视剧-动漫数据库-要求有至少三类标签、六个节点和两种关系" tabindex="-1">15. 使用Neo4j中的Cypher语言创建一个热门电影/电视剧/动漫数据库，要求有至少三类标签、六个节点和两种关系 <a class="header-anchor" href="#_15-使用neo4j中的cypher语言创建一个热门电影-电视剧-动漫数据库-要求有至少三类标签、六个节点和两种关系" aria-label="Permalink to &quot;15. 使用Neo4j中的Cypher语言创建一个热门电影/电视剧/动漫数据库，要求有至少三类标签、六个节点和两种关系&quot;">​</a></h2><div class="language-cypher vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cypher</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建 Show 节点</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (got:Show </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">title</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Game of Thrones&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建 Character 节点</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (jon:Character </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Jon Snow&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (dany:Character </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Daenerys Targaryen&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (tyrion:Character </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Tyrion Lannister&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建 Actor 节点</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (kit:Actor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Kit Harington&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (emilia:Actor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Emilia Clarke&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (peter:Actor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Peter Dinklage&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (kit)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">[:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ACTED_IN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(got)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (emilia)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">[:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ACTED_IN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(got)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (peter)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">[:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ACTED_IN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(got)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (jon)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">[:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HAS_CHARACTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(got)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (dany)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">[:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HAS_CHARACTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(got)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (tyrion)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">[:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HAS_CHARACTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(got)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (kit)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">[:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PLAYS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(jon)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (emilia)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">[:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PLAYS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dany)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (peter)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">[:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PLAYS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tyrion)</span></span></code></pre></div>`,3)),i("h2",x,[s[19]||(s[19]=t("16. 当前NoSQL数据库产品中最热门的一种数据库是 ")),i("mjx-container",T,[(e(),l("svg",y,s[17]||(s[17]=[a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="munder"><g data-mml-node="mrow"><g data-mml-node="mi"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1051,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1536,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2136,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2613,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3098,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3926,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(0,-670)"><svg width="4685" height="237" x="0" y="148" viewBox="1171.3 148 4685 237"><path data-c="2013" d="M0 248V285H499V248H0Z" transform="scale(14.055,1)" style="stroke-width:3;"></path></svg></g></g></g></g>',1)]))),s[18]||(s[18]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("munder",null,[i("mrow",null,[i("mi",null,"M"),i("mi",null,"o"),i("mi",null,"n"),i("mi",null,"g"),i("mi",null,"o"),i("mi",null,"D"),i("mi",null,"B")]),i("mo",{accent:"true"},"―")])])],-1))]),s[20]||(s[20]=t()),s[21]||(s[21]=i("a",{class:"header-anchor",href:"#_16-当前nosql数据库产品中最热门的一种数据库是","aria-label":'Permalink to "16. 当前NoSQL数据库产品中最热门的一种数据库是 $\\underline{MongoDB}$"'},"​",-1))]),i("h2",E,[s[24]||(s[24]=t("17. MongoDB 是由 ")),i("mjx-container",w,[(e(),l("svg",c,s[22]||(s[22]=[a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="munder"><g data-mml-node="mrow"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(982.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1982.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(0,-547)"><svg width="2760.4" height="237" x="0" y="148" viewBox="690.1 148 2760.4 237"><path data-c="2013" d="M0 248V285H499V248H0Z" transform="scale(8.281,1)" style="stroke-width:3;"></path></svg></g></g></g></g>',1)]))),s[23]||(s[23]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("munder",null,[i("mrow",null,[i("mi",null,"C"),i("mo",null,"+"),i("mo",null,"+")]),i("mo",{accent:"true"},"―")])])],-1))]),s[25]||(s[25]=t(" 语言编写的 ")),s[26]||(s[26]=i("a",{class:"header-anchor",href:"#_17-mongodb-是由-语言编写的","aria-label":'Permalink to "17. MongoDB 是由 $\\underline{C++}$ 语言编写的"'},"​",-1))]),i("h2",f,[s[29]||(s[29]=t("18. MongoDB 是一个")),i("mjx-container",C,[(e(),l("svg",b,s[27]||(s[27]=[a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="munder"><g data-mml-node="mrow"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">面</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">向</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">集</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">合</text></g></g><g data-mml-node="mo" transform="translate(0,-665)"><svg width="4000" height="237" x="0" y="148" viewBox="1000 148 4000 237"><path data-c="2013" d="M0 248V285H499V248H0Z" transform="scale(12,1)" style="stroke-width:3;"></path></svg></g></g></g></g>',1)]))),s[28]||(s[28]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("munder",null,[i("mrow",null,[i("mi",{mathvariant:"normal"},"面"),i("mi",{mathvariant:"normal"},"向"),i("mi",{mathvariant:"normal"},"集"),i("mi",{mathvariant:"normal"},"合")]),i("mo",{accent:"true"},"―")])])],-1))]),s[30]||(s[30]=t("、模式自由的文档型数据库 ")),s[31]||(s[31]=i("a",{class:"header-anchor",href:"#_18-mongodb-是一个、模式自由的文档型数据库","aria-label":'Permalink to "18. MongoDB 是一个$\\underline{面向集合}$、模式自由的文档型数据库"'},"​",-1))]),i("h2",v,[s[34]||(s[34]=t("19. MongoDB的设计采用 ")),i("mjx-container",A,[(e(),l("svg",F,s[32]||(s[32]=[a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="munder"><g data-mml-node="mrow"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">水</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">平</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">扩</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">展</text></g></g><g data-mml-node="mo" transform="translate(0,-665)"><svg width="4000" height="237" x="0" y="148" viewBox="1000 148 4000 237"><path data-c="2013" d="M0 248V285H499V248H0Z" transform="scale(12,1)" style="stroke-width:3;"></path></svg></g></g></g></g>',1)]))),s[33]||(s[33]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("munder",null,[i("mrow",null,[i("mi",{mathvariant:"normal"},"水"),i("mi",{mathvariant:"normal"},"平"),i("mi",{mathvariant:"normal"},"扩"),i("mi",{mathvariant:"normal"},"展")]),i("mo",{accent:"true"},"―")])])],-1))]),s[35]||(s[35]=t("，可通过分片将数据分布在集群机器中 ")),s[36]||(s[36]=i("a",{class:"header-anchor",href:"#_19-mongodb的设计采用-可通过分片将数据分布在集群机器中","aria-label":'Permalink to "19. MongoDB的设计采用 $\\underline{水平扩展}$，可通过分片将数据分布在集群机器中"'},"​",-1))]),i("h2",D,[s[39]||(s[39]=t("20. MongoDB的逻辑结构是")),i("mjx-container",M,[(e(),l("svg",B,s[37]||(s[37]=[a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="munder"><g data-mml-node="mrow"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">体</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">系</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">结</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">构</text></g></g><g data-mml-node="mo" transform="translate(0,-665)"><svg width="4000" height="237" x="0" y="148" viewBox="1000 148 4000 237"><path data-c="2013" d="M0 248V285H499V248H0Z" transform="scale(12,1)" style="stroke-width:3;"></path></svg></g></g></g></g>',1)]))),s[38]||(s[38]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("munder",null,[i("mrow",null,[i("mi",{mathvariant:"normal"},"体"),i("mi",{mathvariant:"normal"},"系"),i("mi",{mathvariant:"normal"},"结"),i("mi",{mathvariant:"normal"},"构")]),i("mo",{accent:"true"},"―")])])],-1))]),s[40]||(s[40]=t("的一种形式 ")),s[41]||(s[41]=i("a",{class:"header-anchor",href:"#_20-mongodb的逻辑结构是的一种形式","aria-label":'Permalink to "20. MongoDB的逻辑结构是$\\underline{体系结构}$的一种形式"'},"​",-1))]),i("h2",L,[s[44]||(s[44]=t("21. 下列数据库中，哪个数据库不是MongoDB默认提供的 ")),i("mjx-container",H,[(e(),l("svg",S,s[42]||(s[42]=[a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="munder"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(0,-465)"><svg width="759" height="237" x="0" y="148" viewBox="189.8 148 759 237"><path data-c="2013" d="M0 248V285H499V248H0Z" transform="scale(2.277,1)" style="stroke-width:3;"></path></svg></g></g></g></g>',1)]))),s[43]||(s[43]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("munder",null,[i("mi",null,"B"),i("mo",{accent:"true"},"―")])])],-1))]),s[45]||(s[45]=t()),s[46]||(s[46]=i("a",{class:"header-anchor",href:"#_21-下列数据库中-哪个数据库不是mongodb默认提供的","aria-label":'Permalink to "21. 下列数据库中，哪个数据库不是MongoDB默认提供的  $\\underline{B}$"'},"​",-1))]),s[56]||(s[56]=i("ul",null,[i("li",null,"A. admin数据库"),i("li",null,"B. user数据库"),i("li",null,"C. config数据库"),i("li",null,"D. test 数据库")],-1)),i("h2",q,[s[49]||(s[49]=t("22. 下列说法中，关于MongoDB文档说法正确的是？ ")),i("mjx-container",N,[(e(),l("svg",P,s[47]||(s[47]=[a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="munder"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(0,-465)"><svg width="828" height="237" x="0" y="148" viewBox="207 148 828 237"><path data-c="2013" d="M0 248V285H499V248H0Z" transform="scale(2.484,1)" style="stroke-width:3;"></path></svg></g></g></g></g>',1)]))),s[48]||(s[48]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("munder",null,[i("mi",null,"D"),i("mo",{accent:"true"},"―")])])],-1))]),s[50]||(s[50]=t()),s[51]||(s[51]=i("a",{class:"header-anchor",href:"#_22-下列说法中-关于mongodb文档说法正确的是","aria-label":'Permalink to "22. 下列说法中，关于MongoDB文档说法正确的是？ $\\underline{D}$"'},"​",-1))]),s[57]||(s[57]=a('<ul><li>A. MongoDB单个文档大小上限为64MB</li><li>B. 文档的值只可以是字符串类型</li><li>C. 文档中可以有重复的键</li><li>D. 不建议自定义_id键</li></ul><h2 id="_23-简述mongodb数据库的优势" tabindex="-1">23. 简述MongoDB数据库的优势 <a class="header-anchor" href="#_23-简述mongodb数据库的优势" aria-label="Permalink to &quot;23. 简述MongoDB数据库的优势&quot;">​</a></h2><ul><li>易用性：灵活的文档模型。JSON格式简单易学</li><li>支持高性能访问数据。存储引擎是文档型数据库的核心组件。</li><li>可扩展性：支持大数据分布式存储，服务能力水平可横向弹性扩展</li></ul>',3))])}const G=n(o,[["render",V]]);export{J as __pageData,G as default};
