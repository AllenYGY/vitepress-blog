import{_ as a,c as s,a5 as t,o as e}from"./chunks/framework.CHhwEXkI.js";const k=JSON.parse('{"title":"01-FP-Basics","description":"","frontmatter":{"date":"2025-04-06T00:00:00.000Z","title":"01-FP-Basics","status":"UNFINISHED","author":["AllenYGY"],"tags":["NOTE"],"publish":true},"headers":[],"relativePath":"posts/Functional Programming/Lecture/01-FP-Basics.md","filePath":"posts/Functional Programming/Lecture/01-FP-Basics.md","lastUpdated":null}'),n={name:"posts/Functional Programming/Lecture/01-FP-Basics.md"};function l(o,i,d,r,h,p){return e(),s("div",null,i[0]||(i[0]=[t('<h1 id="_01-fp-basics" tabindex="-1">01-FP-Basics <a class="header-anchor" href="#_01-fp-basics" aria-label="Permalink to &quot;01-FP-Basics&quot;">​</a></h1><h2 id="basic-expressions" tabindex="-1">Basic Expressions <a class="header-anchor" href="#basic-expressions" aria-label="Permalink to &quot;Basic Expressions&quot;">​</a></h2><h3 id="standard-out" tabindex="-1">Standard Out <a class="header-anchor" href="#standard-out" aria-label="Permalink to &quot;Standard Out&quot;">​</a></h3><div class="language-ocaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ocaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">print_endline &quot;Hello World!&quot;;;</span></span></code></pre></div><p>For other data type,<code>print_char</code>,<code>print_float</code>,<code>print_int</code>, etc.</p><h3 id="declaration" tabindex="-1">Declaration <a class="header-anchor" href="#declaration" aria-label="Permalink to &quot;Declaration&quot;">​</a></h3><ul><li><code>let</code> is used for declarations.</li></ul><div class="language-ocaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ocaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-light-text-decoration:underline;--shiki-dark:#F97583;--shiki-dark-text-decoration:underline;">let</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;"> &lt;</span><span style="--shiki-light:#005CC5;--shiki-light-text-decoration:underline;--shiki-dark:#79B8FF;--shiki-dark-text-decoration:underline;">name</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">expression</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;;</span></span></code></pre></div><ul><li><code>let</code> - initiative a declaration.</li><li><code>&lt;name&gt;</code> - a new name (for variable, functions, etc.) being declared, which must start with lower letter;</li><li><code>&lt;expression&gt;</code> - the value of the name.</li></ul><p>Example:</p><div class="language-ocaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ocaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-light-text-decoration:underline;--shiki-dark:#F97583;--shiki-dark-text-decoration:underline;">let</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4005</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;;</span></span></code></pre></div><p>Return:</p><div class="language-ocaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ocaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-light-text-decoration:underline;--shiki-dark:#79B8FF;--shiki-dark-text-decoration:underline;">val</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> x</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> int </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4005</span></span></code></pre></div>',13)]))}const u=a(n,[["render",l]]);export{k as __pageData,u as default};
