import{_ as t,c as i,a5 as n,o as a}from"./chunks/framework.CHhwEXkI.js";const m=JSON.parse('{"title":"03-Entity-Relationship-Model-Extended-Features","description":"","frontmatter":{"title":"03-Entity-Relationship-Model-Extended-Features","date":"2023-11-03T00:00:00.000Z","status":"DONE","tags":["DataBase","NOTE","Lec3"],"author":["AllenYGY"],"created":"2023-11-03T00:59","updated":"2024-03-21T21:36","publish":true},"headers":[],"relativePath":"posts/Database Management System/RDBMS/03-Entity-Relationship-Model-Extended-Features.md","filePath":"posts/Database Management System/RDBMS/03-Entity-Relationship-Model-Extended-Features.md","lastUpdated":null}'),s={name:"posts/Database Management System/RDBMS/03-Entity-Relationship-Model-Extended-Features.md"};function o(l,e,r,d,p,h){return a(),i("div",null,e[0]||(e[0]=[n('<h1 id="entity-relationship-model-extended-features" tabindex="-1">Entity-Relationship-Model-Extended-Features <a class="header-anchor" href="#entity-relationship-model-extended-features" aria-label="Permalink to &quot;Entity-Relationship-Model-Extended-Features&quot;">​</a></h1><ul><li>Aggregation <em>聚合</em></li><li>Weak Entity Sets</li><li>Generalization and Specialization</li></ul><h2 id="aggregation" tabindex="-1">Aggregation <a class="header-anchor" href="#aggregation" aria-label="Permalink to &quot;Aggregation&quot;">​</a></h2><p>let “student”, “instructor”, “course”, and “enroll” form an abstract entity as an aggregation. Then “project” only need to associate with the courses which has a course project. <img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/MnKmwI.png" alt="MnKmwI"></p><h2 id="weak-entity-sets" tabindex="-1">Weak Entity Sets <a class="header-anchor" href="#weak-entity-sets" aria-label="Permalink to &quot;Weak Entity Sets&quot;">​</a></h2><p>A weak entity is an entity cannot exist alone. The existence depends on another entity of a different type. 弱实体不单独存在，必须依附于实体 A set of weak entities is a weak entity set. Since a weak entity cannot exist alone, it does not have a key. The existence of a weak entity set depends on the existence of an identifying entity set.</p><ul><li><p>A weak must relate to the identifying entity set via a total, one-to-many relationship set from the identifying to the weak entity set.</p></li><li><p>An identifying relationship depicted using a double diamond. 用双线菱形表示<em>identifying relationship</em></p></li><li><p>The discriminator(<em>鉴别器</em>) (or <em>partial key</em>) of a weak entity set is the set of attributes that distinguishes among all the entities of a weak entity set. To distinguish weak entities, one must <em><strong>combine the key of the identifying entity set and the discriminator</strong></em></p></li><li><p>Example</p></li></ul><p>Our original modeling for courses was not accurate. Instead of saying “a student is enrolled to a course”, it’s better to say, “a student is enrolled to a section of a course”. Same for instructors, one instructor may teach multiple sections of one course. An entity set “section” is needed. But a section needs to be with a course. Thus, “section” is a weak entity set which depends on “course”. <img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/PWsNRI.png" alt="PWsNRI"></p><p>Double rectangles denote weak entity sets. <em>双矩形边框</em> 表示weak entity Dashed underlines denote discriminators of weak entity sets. <em>虚线下划线</em> 表示 weak entity的键 Double diamonds denote identifying relationship sets. Assume we model the original “enroll” relationship set without constraints. ^[我的评价是真sharuan]</p><h2 id="generalization-specialization" tabindex="-1">Generalization &amp; Specialization <a class="header-anchor" href="#generalization-specialization" aria-label="Permalink to &quot;Generalization &amp; Specialization&quot;">​</a></h2><ul><li><p>Generalization <em>(泛化)</em> is the process of extracting common properties from a set of entities and create a generalized entity from it. It is a bottom-up approach in which two or more entities can be generalized to a higher level entity if they have some attributes in common.</p></li><li><p>specialization <em>(具象化)</em>, an entity is divided into sub-entities based on their characteristics. It is a top-down approach where higher level entity is specialized into two or more lower level entities.</p></li><li><p>泛化 抽象实体集的共同特征 bottom-up</p></li><li><p>具象化 Top-down</p></li><li><p>Does one higher-level entity belong to at least one lower-level entity set? If yes, this ISA is a total generalization. If no, this ISA is a partial generalization</p></li><li><p>Does one higher-level entity belong to multiple lower-level entity set? If No, it is a disjoint generalization. If no, it’s a overlapping generalization</p></li><li><p>Similar to the Inheritance <img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER-Generalization.png" alt="ER-Generalization.png"></p></li></ul><p>Cardinality constraints and participation constraints can be applied on ISA relationship sets. But some constraints are omitted because each entity on the lower-level is one entity on the higher-level (the entity sets on the lower-level always fully participate ISA); one entity cannot be associated with multiple entities in the same entity set on the lower-level. Thus, the constraints on ISA only discuss Does one higher-level entity belong to at least one lower-level entity set? If yes, this ISA is a total generalization. Does one higher-level entity belong to multiple lower-level entity set? If No, it is a disjoint generalization.</p><p>The above design process is bottom-up, combining several entity sets with same attributes into higher-level entity set. But sometimes the process is reversed. Some entity sets can be split into some lower-level entity sets with specific attributes. This top-down process is called specialization.</p><p>Consider the “student” and “instructor” example. If we want to express every person is either a student or an instructor, then this is a total generalization. And if we assume nobody can be a student and an instructor at the same time, this is a disjoint generalization. <img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/S0PX3U.png" alt="S0PX3U"></p>',14)]))}const u=t(s,[["render",o]]);export{m as __pageData,u as default};
