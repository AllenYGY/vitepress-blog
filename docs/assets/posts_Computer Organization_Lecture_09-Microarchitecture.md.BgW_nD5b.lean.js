import{_ as o,c as s,a5 as i,j as e,a as l,o as a}from"./chunks/framework.CHhwEXkI.js";const j=JSON.parse('{"title":"Microarchitecture","description":"","frontmatter":{"title":"Microarchitecture","date":"2023-10-16T00:00:00.000Z","author":["AllenYGY"],"status":"DONE","tags":["NOTE","CO","Lec8"],"created":"2024-01-16T21:03","updated":"2024-05-31T01:17","publish":true},"headers":[],"relativePath":"posts/Computer Organization/Lecture/09-Microarchitecture.md","filePath":"posts/Computer Organization/Lecture/09-Microarchitecture.md","lastUpdated":null}'),n={name:"posts/Computer Organization/Lecture/09-Microarchitecture.md"},r={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},d={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.919ex",height:"1.887ex",role:"img",focusable:"false",viewBox:"0 -833.9 1290.1 833.9","aria-hidden":"true"},u={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},c={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.919ex",height:"1.887ex",role:"img",focusable:"false",viewBox:"0 -833.9 1290.1 833.9","aria-hidden":"true"},Q={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},m={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.262ex",height:"1.557ex",role:"img",focusable:"false",viewBox:"0 -666 1000 688","aria-hidden":"true"},p={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},h={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.375ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.705ex",height:"1.92ex",role:"img",focusable:"false",viewBox:"0 -683 1195.6 848.6","aria-hidden":"true"},T={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},g={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.339ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.705ex",height:"1.885ex",role:"img",focusable:"false",viewBox:"0 -683 1195.6 833","aria-hidden":"true"},x={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},w={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.339ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.705ex",height:"1.885ex",role:"img",focusable:"false",viewBox:"0 -683 1195.6 833","aria-hidden":"true"},f={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},b={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.375ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.705ex",height:"1.92ex",role:"img",focusable:"false",viewBox:"0 -683 1195.6 848.6","aria-hidden":"true"},v={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},k={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.375ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.705ex",height:"1.92ex",role:"img",focusable:"false",viewBox:"0 -683 1195.6 848.6","aria-hidden":"true"},y={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},M={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.339ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.164ex",height:"1.934ex",role:"img",focusable:"false",viewBox:"0 -705 1840.6 855","aria-hidden":"true"},L={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},H={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.339ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.164ex",height:"1.934ex",role:"img",focusable:"false",viewBox:"0 -705 1840.6 855","aria-hidden":"true"},A={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},C={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.048ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.59ex",height:"1.593ex",role:"img",focusable:"false",viewBox:"0 -683 1587 704","aria-hidden":"true"};function S(I,t,D,V,R,P){return a(),s("div",null,[t[39]||(t[39]=i('<h1 id="microarchitecture" tabindex="-1">Microarchitecture <a class="header-anchor" href="#microarchitecture" aria-label="Permalink to &quot;Microarchitecture&quot;">​</a></h1><ul><li><p>Microarchitecture connects circuits and ISA together. ISA = Instruction Set Architecture</p></li><li><p>ISA specifies what hardware does, but not how</p><ul><li>ISA defines the instruction code</li></ul></li><li><p>Microarchitecture specifies how it does it</p><ul><li>Microarchitecture determine how it work it</li></ul></li></ul><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Microarchitecture.png"><ul><li>The ISA is the interface of a processor as seen by an assembly language programmer or compiler writer</li><li>Micro-architecture transfers the ISA into an implementation</li><li>For a given ISA, there might be many different microarchitectures</li><li>An architecture is a collection of circuits connected</li></ul><h2 id="von-neumann-architecture" tabindex="-1">Von Neumann architecture <a class="header-anchor" href="#von-neumann-architecture" aria-label="Permalink to &quot;Von Neumann architecture&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/John_von_Neumann.png" width="30%"><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/VNA.png" alt="VNA"></p><ul><li>Memory</li><li>CPU <ul><li>Register</li><li>ALU</li><li>CU</li></ul></li><li>I/O</li></ul><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Stored-Program-Computer.png"><ul><li>Memory stores not only data, but coded instructions that make up a computer program</li><li>CPU fetches and executes – interprets - successive instructions of the program</li><li>Program is simply data for the interpreter – as in a Universal Turing Machine!</li><li>Single expandable resource pool – main memory</li><li>constrains both data and program size</li></ul><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Lc-3/Lc-3.png"><h2 id="memory" tabindex="-1">Memory <a class="header-anchor" href="#memory" aria-label="Permalink to &quot;Memory&quot;">​</a></h2>',11)),e("ul",null,[e("li",null,[t[6]||(t[6]=l("Address space ")),e("mjx-container",r,[(a(),s("svg",d,t[0]||(t[0]=[i('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(500,0)" style="stroke-width:3;"></path></g></g></g></g></g>',1)]))),t[1]||(t[1]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("msup",null,[e("mn",null,"2"),e("mrow",{"data-mjx-texclass":"ORD"},[e("mn",null,"16")])])])],-1))]),e("ul",null,[e("li",null,[t[4]||(t[4]=l("means: there are ")),e("mjx-container",u,[(a(),s("svg",c,t[2]||(t[2]=[i('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(500,0)" style="stroke-width:3;"></path></g></g></g></g></g>',1)]))),t[3]||(t[3]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("msup",null,[e("mn",null,"2"),e("mrow",{"data-mjx-texclass":"ORD"},[e("mn",null,"16")])])])],-1))]),t[5]||(t[5]=l(" block"))])])]),e("li",null,[t[9]||(t[9]=l("Addressability ")),e("mjx-container",Q,[(a(),s("svg",m,t[7]||(t[7]=[i('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(500,0)" style="stroke-width:3;"></path></g></g></g>',1)]))),t[8]||(t[8]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mn",null,"16")])],-1))])]),t[10]||(t[10]=i('<li>Each block store 16-bit instruction <ul><li>Each block represent by a Hexadecimal code <ul><li>x0000</li><li>x0001</li><li>....</li></ul></li><li>Address 逐行递增</li></ul></li><li>Memory is store element</li><li>Basic Operations <ul><li>LOAD <ul><li>read a value from a memory location</li></ul></li><li>STORE <ul><li>write a value to a memory location <img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Lc-3/Memory.png"></li></ul></li></ul></li>',3))]),t[40]||(t[40]=i('<h3 id="interface-to-memory" tabindex="-1">Interface to Memory <a class="header-anchor" href="#interface-to-memory" aria-label="Permalink to &quot;Interface to Memory&quot;">​</a></h3><ol><li>MAR: Memory Address Register (D flip-flops)</li><li>MDR: Memory Data Register (D flip-flops) <img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Lc-3/MAR-MDR.png"></li></ol><ul><li>To read a location (A): <ol><li>Write the address (A) into the MAR.</li><li>Send a “read” signal to the memory.</li><li>Read the data from MDR.</li></ol></li><li>To write a value (X) to a location (A): <ol><li>Write the data (X) to the MDR.</li><li>Write the address (A) into the MAR.</li><li>Send a “write” signal to the memory.</li></ol></li></ul><h2 id="cpu" tabindex="-1">CPU <a class="header-anchor" href="#cpu" aria-label="Permalink to &quot;CPU&quot;">​</a></h2><ul><li>The brain of the computer</li><li>It is the part that actually executes the machine instructions</li><li>Inside the CPU <ul><li>Data path <ul><li>Registers</li></ul></li><li>Control Path <ul><li>IR (instruction register), PC (program counter), FSM (finite state machine)</li></ul></li></ul></li></ul><h3 id="register-register-file" tabindex="-1">Register <em>Register File</em> <a class="header-anchor" href="#register-register-file" aria-label="Permalink to &quot;Register *Register File*&quot;">​</a></h3>',6)),e("ul",null,[t[38]||(t[38]=e("li",null,[l("Register is store element "),e("ul",null,[e("li",null,"Achieved by D filp-flop")])],-1)),e("li",null,[t[28]||(t[28]=l("8 Register ")),e("ul",null,[e("li",null,[t[27]||(t[27]=l("Each register represent by 3 bit to record its address ")),e("ul",null,[e("li",null,[t[13]||(t[13]=l("000 ")),e("mjx-container",p,[(a(),s("svg",h,t[11]||(t[11]=[i('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(792,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" style="stroke-width:3;"></path></g></g></g></g>',1)]))),t[12]||(t[12]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("msub",null,[e("mi",null,"R"),e("mn",null,"0")])])],-1))])]),e("li",null,[t[16]||(t[16]=l("001 ")),e("mjx-container",T,[(a(),s("svg",g,t[14]||(t[14]=[i('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(792,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g></g></g></g>',1)]))),t[15]||(t[15]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("msub",null,[e("mi",null,"R"),e("mn",null,"1")])])],-1))])]),e("li",null,[t[19]||(t[19]=l("010 ")),e("mjx-container",x,[(a(),s("svg",w,t[17]||(t[17]=[i('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(792,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g></g></g></g>',1)]))),t[18]||(t[18]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("msub",null,[e("mi",null,"R"),e("mn",null,"2")])])],-1))])]),t[26]||(t[26]=e("li",null,"...",-1)),e("li",null,[t[22]||(t[22]=l("110 ")),e("mjx-container",f,[(a(),s("svg",b,t[20]||(t[20]=[i('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(792,-150) scale(0.707)"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" style="stroke-width:3;"></path></g></g></g></g>',1)]))),t[21]||(t[21]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("msub",null,[e("mi",null,"R"),e("mn",null,"6")])])],-1))])]),e("li",null,[t[25]||(t[25]=l("111 ")),e("mjx-container",v,[(a(),s("svg",k,t[23]||(t[23]=[i('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(792,-150) scale(0.707)"><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z" style="stroke-width:3;"></path></g></g></g></g>',1)]))),t[24]||(t[24]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("msub",null,[e("mi",null,"R"),e("mn",null,"7")])])],-1))])])])])])]),e("li",null,[t[31]||(t[31]=l("Source Register 1 ")),e("mjx-container",y,[(a(),s("svg",M,t[29]||(t[29]=[i('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(645,0)"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(792,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g></g></g></g>',1)]))),t[30]||(t[30]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"S"),e("msub",null,[e("mi",null,"R"),e("mn",null,"1")])])],-1))])]),e("li",null,[t[34]||(t[34]=l("Source Register 2 ")),e("mjx-container",L,[(a(),s("svg",H,t[32]||(t[32]=[i('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(645,0)"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(792,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g></g></g></g>',1)]))),t[33]||(t[33]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"S"),e("msub",null,[e("mi",null,"R"),e("mn",null,"2")])])],-1))])]),e("li",null,[t[37]||(t[37]=l("Destination Register ")),e("mjx-container",A,[(a(),s("svg",C,t[35]||(t[35]=[i('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(828,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g></g></g>',1)]))),t[36]||(t[36]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"D"),e("mi",null,"R")])],-1))])])]),t[41]||(t[41]=i(`<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/Register.png" alt="Register"><ul><li>Why register? Closer to processing unit, allow quicker access to intermediate results instead of going to memory</li></ul><h3 id="alu-arithmetic-logic-unit" tabindex="-1">ALU <em>Arithmetic Logic Unit</em> <a class="header-anchor" href="#alu-arithmetic-logic-unit" aria-label="Permalink to &quot;ALU *Arithmetic Logic Unit*&quot;">​</a></h3><p>Perform arithmetic and logic operations (AND, NOT, ADD) on values stored in registers</p><ul><li>ADD</li><li>AND</li><li>NOT A</li><li>PASS A</li></ul><h3 id="cu" tabindex="-1">CU <a class="header-anchor" href="#cu" aria-label="Permalink to &quot;CU&quot;">​</a></h3><p>Control Unit: a finite state machine coordinates execution of the program <img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Lc-3/CU.png"> IR Get the Instruction from Memory through PC&#39;s address</p><ul><li>PC <em>Program Counter</em><ul><li>It stores the next instruction address</li><li>In each clock, PC+=1</li><li>In x86 architecture also called IP <em>Instruction Pointer</em></li></ul></li><li>IR <em>Instruction Register</em><ul><li>Current Instruction</li></ul></li><li>Control Unit as a Finite State Machine <img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Lc-3/CU-FSM.png"></li></ul><h2 id="i-o" tabindex="-1">I/O <a class="header-anchor" href="#i-o" aria-label="Permalink to &quot;I/O&quot;">​</a></h2><ul><li>Devices for getting data into and out of memory</li><li>Each device has its own interface, usually a set of registers like the memory’s MAR and MDR <ul><li>keyboard: data register (KBDR) and status register (KBSR)</li><li>console: data register (DDR) and status register (DSR)</li></ul></li></ul><h2 id="instruction" tabindex="-1">Instruction <a class="header-anchor" href="#instruction" aria-label="Permalink to &quot;Instruction&quot;">​</a></h2><ul><li>The instruction is the most basic unit of computer processing.</li><li>One instruction specifies two things: <ul><li>opcode: operation to be performed</li><li>operands: data/locations to be used for operation</li></ul></li><li>An instruction is encoded as a sequence of bits (just like data!)</li><li>Control unit interprets instruction</li><li>A computer’s instructions and their formats is known as its Instruction Set Architecture (ISA).</li></ul><h3 id="lc-3-s-add-instruction" tabindex="-1">Lc-3&#39;s ADD Instruction <a class="header-anchor" href="#lc-3-s-add-instruction" aria-label="Permalink to &quot;Lc-3&#39;s ADD Instruction&quot;">​</a></h3><ul><li>opcode: 0001</li><li>steering bit IR[5]</li></ul><p>If IR[5]=0</p><div class="language-ISA vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ISA</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ADD DST SR1 000 SR2</span></span>
<span class="line"><span>0001 xxx xxx 000 xxx</span></span></code></pre></div><ul><li>operands: Src1,Src2,Dst <ul><li>Src1+Src2-&gt;Dst</li></ul></li></ul><p>If IR[5]=1</p><div class="language-ISA vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ISA</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ADD DST SR1 1 xxxxx</span></span>
<span class="line"><span>0001 xxx xxx 1 xxxxx</span></span></code></pre></div><ul><li>operands: Src1,Dst,xxxxx <ul><li>Src1+xxxxx-&gt;Dst</li></ul></li></ul><h3 id="lc-3-s-ldr-instruction" tabindex="-1">LC-3&#39;s LDR Instruction <a class="header-anchor" href="#lc-3-s-ldr-instruction" aria-label="Permalink to &quot;LC-3&#39;s LDR Instruction&quot;">​</a></h3><ul><li><p>opcode: 0110</p></li><li><p>operands: Src,Dst</p></li><li><p>Load the value in memory location Src into register Dst</p></li><li><p>Move [Base + Offset] to Dst</p></li><li><p>Load memory content at address (R3 + 6) to R2</p></li></ul><div class="language-ISA vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ISA</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>LDR DST SRC offset</span></span>
<span class="line"><span>0110 xxx xxx xxxxxx</span></span></code></pre></div><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/LDR.png"><h2 id="instruction-processsing" tabindex="-1">Instruction processsing <a class="header-anchor" href="#instruction-processsing" aria-label="Permalink to &quot;Instruction processsing&quot;">​</a></h2><ul><li><strong>Fetch</strong></li><li><strong>Decode</strong></li><li><strong>Evaluate Address</strong></li><li><strong>Fetch operands</strong></li><li><strong>Execute</strong></li><li><strong>Store result</strong></li></ul><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Lc-3/instruction-process.png"><h3 id="fetch" tabindex="-1">Fetch <a class="header-anchor" href="#fetch" aria-label="Permalink to &quot;Fetch&quot;">​</a></h3><p>PC-MAR-MDR-IR</p><p>Load next instruction (at address stored in PC) from memory into Instruction Register (IR).</p><ul><li>Load contents of PC into MAR.</li><li>Send “read” signal to memory.</li><li>Read contents of MDR, store in IR.</li></ul><p>Then increment PC, so that it points to the next instruction in sequence.</p><ul><li>PC becomes PC+1.</li></ul><h3 id="decode" tabindex="-1">Decode <a class="header-anchor" href="#decode" aria-label="Permalink to &quot;Decode&quot;">​</a></h3><p>First identify the opcode.</p><ul><li>In LC-3, this is always the first four bits of instruction.</li><li>A 4-to-16 decoder asserts a control line corresponding to the desired opcode.</li></ul><h3 id="evaluate-address-计算地址" tabindex="-1">Evaluate Address <em>计算地址</em> <a class="header-anchor" href="#evaluate-address-计算地址" aria-label="Permalink to &quot;Evaluate Address *计算地址*&quot;">​</a></h3><ul><li>For instructions that require memory access, compute address used for access.</li><li>Examples: <ul><li>add offset to base register (as in LDR)</li><li>add offset to PC (or to part of PC)</li></ul></li></ul><h3 id="fetch-operands" tabindex="-1">Fetch Operands <a class="header-anchor" href="#fetch-operands" aria-label="Permalink to &quot;Fetch Operands&quot;">​</a></h3><ul><li>Obtain source operands needed to perform operation.</li><li>Examples: <ul><li>load data from memory (LDR)</li><li>read data from register file (ADD)</li></ul></li></ul><h3 id="execution" tabindex="-1">Execution <a class="header-anchor" href="#execution" aria-label="Permalink to &quot;Execution&quot;">​</a></h3><ul><li>Perform the operation, using the source operands.</li><li>Examples: <ul><li>send operands to ALU and assert ADD signal</li><li>do nothing (e.g., for loads and stores)</li></ul></li></ul><h3 id="store" tabindex="-1">Store <a class="header-anchor" href="#store" aria-label="Permalink to &quot;Store&quot;">​</a></h3><ul><li>Write results to destination (register or memory)</li><li>Examples: <ul><li>result of ADD is placed in destination register</li><li>result of memory load is placed in destination register</li></ul></li><li>for store instruction, data is stored to memory</li></ul><h2 id="changing-the-sequence-of-execution" tabindex="-1">Changing the Sequence of Execution <a class="header-anchor" href="#changing-the-sequence-of-execution" aria-label="Permalink to &quot;Changing the Sequence of Execution&quot;">​</a></h2><ul><li>In the FETCH phase, PC is incremented by 1 automatically (counter)</li><li>Other Sequence <ul><li>if-then, loop, function call</li><li>Achieved by special instruction that changes the content of PC <ul><li>Jumps (unconditionals)</li><li>Branches (conditional)</li></ul></li></ul></li></ul><h3 id="lc-3-s-jump-instruction" tabindex="-1">LC-3&#39;s Jump Instruction <a class="header-anchor" href="#lc-3-s-jump-instruction" aria-label="Permalink to &quot;LC-3&#39;s Jump Instruction&quot;">​</a></h3><p>Set the PC to the value obtained by adding an offset to a register.</p><div class="language-ISA vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ISA</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>JMPR 000 BASE offset</span></span>
<span class="line"><span>1100 000 011 000110</span></span></code></pre></div><p>Add the value of 6 (offset) to the contents of R3 (Base),and load the result into the PC</p><p>This becomes the address of the next instruction to fetch.</p><h3 id="driving-force-the-clock" tabindex="-1">Driving Force: the Clock <a class="header-anchor" href="#driving-force-the-clock" aria-label="Permalink to &quot;Driving Force: the Clock&quot;">​</a></h3><p>The clock is a signal that keeps the control unit moving.</p><ul><li><p>At each clock “tick,” control unit moves to the next machine cycle -- may be next instruction or next phase of current instruction.</p></li><li><p>Stopping the Computer</p><ul><li>Stopping the instruction cycle requires stopping the clock</li></ul></li></ul><h2 id="instruction-summary" tabindex="-1">Instruction summary <a class="header-anchor" href="#instruction-summary" aria-label="Permalink to &quot;Instruction summary&quot;">​</a></h2><ul><li>Three basic kinds of instructions: <ul><li>computational instructions (ADD, AND, …)</li><li>data movement instructions (LD, ST, …)</li><li>control instructions (JMP, BRnz, …)</li></ul></li></ul><h2 id="micro-architecture-level" tabindex="-1">Micro-Architecture Level <a class="header-anchor" href="#micro-architecture-level" aria-label="Permalink to &quot;Micro-Architecture Level&quot;">​</a></h2><ul><li>Computer = processing unit + memory system + I/O <ul><li>Processing unit = control + data path <ul><li>Control = FSM <em>Finite state machine</em><ul><li>Inputs = machine instruction,datapath condition</li><li>Outputs = register transfer control signal, ALU operation codes</li><li>Instruction interpretation = instruction fetch, decode, execute, write</li></ul></li><li>Datapath = function units +registers <ul><li>All logic used to process information <ul><li>Functional units = ALU, multipliers,dividers...</li><li>Register = PC <em>program counter</em>, IR <em>instruction register</em>, storage registers</li></ul></li></ul></li></ul></li></ul></li></ul>`,58))])}const E=o(n,[["render",S]]);export{j as __pageData,E as default};
