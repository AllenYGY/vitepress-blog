import{_ as t,c as i,a5 as s,o as l}from"./chunks/framework.CHhwEXkI.js";const u=JSON.parse('{"title":"Js-Quick-Start","description":"","frontmatter":{"date":"2024-04-14T00:00:00.000Z","title":"Js-Quick-Start","status":"DONE","author":["AllenYGY"],"tags":["Javascript","Program","NOTE"],"created":"2024-04-14T00:21","updated":"2024-05-12T23:16","publish":true},"headers":[],"relativePath":"posts/Web/javascript/quick-start.md","filePath":"posts/Web/javascript/quick-start.md","lastUpdated":null}'),e={name:"posts/Web/javascript/quick-start.md"};function r(n,a,o,p,c,h){return l(),i("div",null,a[0]||(a[0]=[s(`<h1 id="javascript-quick-start" tabindex="-1">Javascript-Quick-Start <a class="header-anchor" href="#javascript-quick-start" aria-label="Permalink to &quot;Javascript-Quick-Start&quot;">​</a></h1><h2 id="引入js" tabindex="-1">引入<em>Js</em> <a class="header-anchor" href="#引入js" aria-label="Permalink to &quot;引入*Js*&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="输出" tabindex="-1">输出 <a class="header-anchor" href="#输出" aria-label="Permalink to &quot;输出&quot;">​</a></h2><p><strong>弹窗alert()</strong><strong>打印console.log()</strong></p><h2 id="数据类型" tabindex="-1">数据类型 <a class="header-anchor" href="#数据类型" aria-label="Permalink to &quot;数据类型&quot;">​</a></h2><ol><li>Number</li></ol><ul><li>JavaScript中不区分小数和整数</li><li>-99 //负数99</li><li>NaN   //not a number</li><li>Infinity  //表示无限大</li></ul><ol start="2"><li>String</li></ol><ul><li>‘ABC’</li><li>“ABC”</li></ul><ol start="3"><li>Boolean value</li></ol><ul><li>True、false</li></ul>`,12)]))}const k=t(e,[["render",r]]);export{u as __pageData,k as default};
